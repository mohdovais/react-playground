{"version":3,"file":"app.js","sources":["../src/Application.tsx","../src/app.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState, useEffect, useCallback } from '../packages/utils/react';\nimport Combobox, { Option, OptGroup } from '../packages/comobobox';\nimport {\n    combobox as $combobox,\n    optgroup as $optgroup,\n    option as $option,\n} from './Application.module.css';\n\ntype Language = {\n    code: string;\n    name: string;\n};\n\ntype Currency = {\n    code: string;\n    name: string;\n    symbol: string;\n};\n\nexport type Country = {\n    name: string;\n    code: string;\n    capital: string;\n    region: string;\n    currency: Currency;\n    language: Language;\n    flag: string;\n};\n\nexport function Application() {\n    const [countries, setCountries] = useState<Country[]>([]);\n\n    useEffect(() => {\n        fetch('data/countries.json')\n            .then((response) => response.json())\n            .then(setCountries);\n    }, []);\n\n    const remoteQuery = useCallback(\n        function (query: string) {\n            query = query.trim();\n            if (query === '') return [];\n            return new Promise<Country[]>(function (resolve, reject) {\n                const re = new RegExp(query, 'i');\n                const result = countries.filter((country) => {\n                    return re.test(country.name) || re.test(country.capital);\n                });\n                resolve(result);\n            });\n        },\n        [countries]\n    );\n\n    const regions = countries.reduce(function (accum, country) {\n        const region = country.region;\n        if (!accum[region]) {\n            accum[region] = [];\n        }\n        accum[region].push(country);\n        return accum;\n    }, {});\n\n    return (\n        <div>\n            <Combobox onChange={console.log} className={$combobox}>\n                {Object.keys(regions).map((region) => (\n                    <OptGroup\n                        key={region}\n                        label={region}\n                        disabled={region === 'EU'}\n                        className={$optgroup}>\n                        {regions[region].map((country) => (\n                            <Option\n                                key={country.code}\n                                value={country.code}\n                                selected={\n                                    country.name === 'India' ||\n                                    country.name === 'Pakistan'\n                                }\n                                className={$option}>\n                                {country.name}\n                            </Option>\n                        ))}\n                    </OptGroup>\n                ))}\n            </Combobox>\n            -<Combobox onChange={console.log} className={$combobox}></Combobox>-\n            <Combobox onChange={console.log} className={$combobox}>\n                <Option value=\"IN\">India</Option>\n            </Combobox>\n            -\n            <Combobox onChange={console.log} className={$combobox}>\n                <Option value=\"IN\">\n                    In<span>d</span>ia\n                </Option>\n            </Combobox>\n        </div>\n    );\n}\n","import * as ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Application } from './Application';\n\nfunction render(container: HTMLDivElement) {\n    ReactDOM.render(<Application />, container);\n}\n\nfunction unmount(container: HTMLDivElement) {\n    ReactDOM.unmountComponentAtNode(container);\n}\n\nexport default {\n    render,\n    unmount,\n};\n"],"names":["useState","then","response","json","setCountries","useCallback","query","trim","Promise","RegExp","countries","filter","re","test","country","name","capital","reduce","region","accum","push","Combobox","onChange","console","log","className","Object","keys","regions","map","OptGroup","key","label","disabled","Option","code","value","selected","render","container","Application2","unmount"],"mappings":"kJA+BsCA,EAAoB,OAE5C,WACA,uBACDC,SAAmBC,EAASC,SAC5BF,KAAKG,KACX,IAEiBC,GAChB,kBAEkB,QADNC,EAAMC,QACW,GAClB,IAAIC,SAAmB,sBACf,IAAIC,OAAOH,EAAO,OACdI,EAAUC,WACdC,EAAGC,KAAKC,EAAQC,OAASH,EAAGC,KAAKC,EAAQE,iBAK5D,CAACN,YAGWA,EAAUO,QAAO,sBACdH,EAAQI,cAClBC,EAAMD,OACDA,GAAU,MAEdA,GAAQE,KAAKN,GACZK,IACR,2BAGE,MAAD,qBACKE,EAAD,CAAUC,SAAUC,QAAQC,IAAKC,mBAC5BC,OAAOC,KAAKC,GAASC,wBACjBC,EAAD,CACIC,IAAKb,EACLc,MAAOd,EACPe,SAAqB,OAAXf,EACVO,oBACCG,EAAQV,GAAQW,wBACZK,EAAD,CACIH,IAAKjB,EAAQqB,KACbC,MAAOtB,EAAQqB,KACfE,SACqB,UAAjBvB,EAAQC,MACS,aAAjBD,EAAQC,KAEZU,oBACCX,EAAQC,YAKlB,oBACTM,EAAD,CAAUC,SAAUC,QAAQC,IAAKC,oBAAiC,oBAClEJ,EAAD,CAAUC,SAAUC,QAAQC,IAAKC,mCAC5BS,EAAD,CAAQE,MAAM,MAAK,UACZ,oBAEVf,EAAD,CAAUC,SAAUC,QAAQC,IAAKC,mCAC5BS,EAAD,CAAQE,MAAM,MAAK,qBACZ,OAAD,KAAM,KAAQ,QClFpC,MAAe,CACXE,OATJ,SAAgBC,4BACKC,EAAD,MAAiBD,IASjCE,QANJ,qCACoCF"}