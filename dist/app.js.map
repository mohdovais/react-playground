{"version":3,"file":"app.js","sources":["../src/util/math.js","../src/component/chart/pie/path.js","../src/component/chart/pie/DonutPie.jsx","../src/component/chart/pie/Centre.jsx","../src/component/chart/pie/Label.jsx","../src/util/color.js","../src/component/chart/pie/util.js","../src/main.js","../src/component/chart/pie/PieChart.jsx"],"sourcesContent":["export const MATH = Math;\n\nexport function round(number, precisionTo) {\n    var precision = MATH.pow(10, precisionTo || 0);\n    return MATH.round(number * precision) / precision;\n}\n\n/**\n *\n * @param {Number} degree\n * @returns {Number} radian\n */\nexport function radian(degree) {\n    return (degree * MATH.PI) / 180 || 0;\n}\n\n/**\n *\n * @param ...{Number}\n * @returns {Number}\n */\nexport function sum() {\n    return Array.prototype.reduce.call(\n        arguments,\n        (accumulator, item) => accumulator + item,\n        0\n    );\n}\n","import { MATH, round, radian } from './../../../util/math.js';\n\n/**\n *\n * @param {Number} cx X coordinate of center of circle\n * @param {Number} cy Y coordinate of center of circle\n * @param {Number} radius Radius of circle\n * @param {Number} degree Angle in Degrees for seeking point\n * @returns {Object} {x,y} coordinates\n */\nexport function getArcPoint(cx, cy, radius, degree) {\n    var theta = radian(degree);\n    return {\n        x: round(cx + radius * MATH.cos(theta), 2),\n        y: round(cy + radius * MATH.sin(theta), 2),\n    };\n}\n\n/**\n *\n * @param {Number} cx X coordinate of center of circle\n * @param {Number} cy Y coordinate of center of circle\n * @param {Number} radius Radius of circle\n * @param {Number} startDegree Arc start angle in Degrees\n * @param {Number} endDegree Arc end angle in Degrees\n * @returns {String} SVG path definition `d`\n */\nexport function getPiePath(cx, cy, radius, startDegree, endDegree) {\n    var start = getArcPoint(cx, cy, radius, startDegree),\n        end = getArcPoint(cx, cy, radius, endDegree),\n        largeArcFlag = MATH.abs(endDegree - startDegree) > 180 ? 1 : 0,\n        sweepFlag = 1,\n        M = 'M ' + start.x + ' ' + start.y,\n        A =\n            'A ' +\n            radius +\n            ' ' +\n            radius +\n            ' 0 ' +\n            largeArcFlag +\n            ' ' +\n            sweepFlag +\n            ' ' +\n            end.x +\n            ' ' +\n            end.y,\n        L = 'L ' + cx + ' ' + cy;\n\n    return M + A + L + 'Z';\n}\n\nexport function getDonutPath(\n    cx,\n    cy,\n    radius,\n    startDegree,\n    endDegree,\n    donutRatio\n) {\n    const donut = round(\n            radius * (donutRatio === undefined ? 0.5 : donutRatio),\n            2\n        ),\n        a = getArcPoint(cx, cy, donut, startDegree),\n        b = getArcPoint(cx, cy, donut, endDegree),\n        d = getArcPoint(cx, cy, radius, startDegree),\n        c = getArcPoint(cx, cy, radius, endDegree),\n        largeArcFlag = MATH.abs(endDegree - startDegree) > 180 ? 1 : 0,\n        //sweepFlag = 1,\n        M = `M${a.x} ${a.y}`,\n        A1 = `A${donut} ${donut} 0 ${largeArcFlag} 1 ${b.x} ${b.y}`,\n        L1 = `L${c.x} ${c.y}`,\n        A2 = `A${radius} ${radius} 0 ${largeArcFlag} 0 ${d.x} ${d.y}`,\n        L2 = `L${a.x} ${a.y}`;\n\n    return M + A1 + L1 + A2 + L2 + 'Z';\n}\n","import React from 'react';\nimport { getDonutPath } from './path.js';\nimport { MATH, radian } from './../../../util/math.js';\n\nfunction getTransform(startAngle, endAngle) {\n    const theta = radian(endAngle + startAngle) / 2;\n    return `translate(${25 * MATH.cos(theta)},${25 * MATH.sin(theta)})`;\n}\n\nfunction DonutPie(props) {\n    return (\n        <g\n            onClick={props.onSelect}\n            transform={\n                props.highlight\n                    ? getTransform(props.startAngle, props.endAngle)\n                    : null\n            }\n        >\n            <path\n                d={getDonutPath(\n                    props.cx,\n                    props.cy,\n                    props.radius,\n                    props.startAngle,\n                    props.endAngle,\n                    props.donut\n                )}\n                data-id={props.id}\n                fill={props.fill}\n                stroke=\"rgba(0,0,0,0.2)\"\n            />\n        </g>\n    );\n}\n\nexport default React.memo(DonutPie);\n","import React from 'react';\n\nfunction Centre(props) {\n    return (\n        <g>\n            <circle\n                cx={props.cx}\n                cy={props.cy}\n                r={props.radius}\n                fill={props.fill}\n            />\n            <text x={props.cx} y={props.cy} textAnchor=\"middle\">\n                {props.text}\n            </text>\n        </g>\n    );\n}\n\nexport default React.memo(Centre);\n","import React from 'react';\nimport { MATH, radian } from './../../../util/math.js';\n\nfunction Label(props) {\n    const angle = radian((props.endAngle + props.startAngle) / 2);\n    const radius = ((1 + props.donut) * props.radius) / 2;\n    return (\n        <text\n            x={props.cx + radius * MATH.cos(angle)}\n            y={props.cy + radius * MATH.sin(angle)}\n            textAnchor=\"middle\"\n        >\n            {props.text}\n        </text>\n    );\n}\n\nexport default React.memo(Label);\n","function randomColor() {\n    return (100 + Math.round(Math.random() * 155)).toString(16);\n}\n\nexport function getRandomColor() {\n    return '#' + randomColor() + randomColor() + randomColor();\n}\n","import { getRandomColor } from './../../../util/color.js';\nimport { MATH, sum } from './../../../util/math.js';\n\nexport function calculateAngles(data) {\n    const total = sum.apply(null, data);\n    let startAngle = 0;\n\n    return data.map((value, i) => {\n        const angle = (value * 360) / total;\n        return {\n            id: i,\n            value,\n            startAngle,\n            endAngle: (startAngle += angle),\n            animStartAngle: 0,\n            animEndAngle: 0,\n            color: getRandomColor(),\n        };\n    });\n}\n\nexport function getInitialState(data) {\n    return {\n        data,\n        discColor: getRandomColor(),\n        animAngle: 1,\n        maxAngle: MATH.max.apply(\n            MATH,\n            data.map(pie => pie.endAngle - pie.startAngle)\n        ),\n    };\n}\n\nexport function getNextAnimationState(state) {\n    const animAngle = state.animAngle * 1.2;\n    let _animStartAngle = 0;\n\n    return Object.assign({}, state, {\n        animAngle,\n        data: state.data.map(pie => {\n            const animStartAngle = _animStartAngle;\n            const animEndAngle =\n                animStartAngle +\n                MATH.min(animAngle, pie.endAngle - pie.startAngle);\n\n            _animStartAngle = animEndAngle;\n\n            return Object.assign({}, pie, {\n                animStartAngle,\n                animEndAngle,\n            });\n        }),\n    });\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n//import PieChart from './svg/PieChart.jsx';\nimport PieChart from './component/chart/pie/PieChart.jsx';\nimport { MATH } from './util/math.js';\n\nfunction random(a, b) {\n    return MATH.round(a + MATH.random() * (b - a));\n}\n\nReactDOM.render(\n    <PieChart\n        data={new Array(random(1, 15))\n            .join(',')\n            .split(',')\n            .map(() => random(0, 100))}\n        dimension={1024}\n        donut={0.33}\n    />,\n    document.getElementById('root')\n);\n","import React from 'react';\nimport DonutPie from './DonutPie.jsx';\nimport Centre from './Centre.jsx';\nimport Label from './Label.jsx';\nimport {\n    getInitialState,\n    calculateAngles,\n    getNextAnimationState,\n} from './util.js';\nimport './PieChart.css';\n\nexport default class PieChart extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        const me = this;\n        me.state = getInitialState(calculateAngles(props.data));\n        me.onSelect = me.onSelect.bind(me);\n        me.animate = me.animate.bind(me);\n    }\n\n    componentDidMount() {\n        this.animate(0);\n    }\n\n    render() {\n        const { dimension, donut } = this.props;\n        const { data, discColor } = this.state;\n        const radius = dimension / 2;\n\n        return (\n            <svg\n                width={dimension}\n                height={dimension}\n                viewBox={`-${radius} -${radius} ${dimension} ${dimension}`}\n            >\n                {data.map(item => (\n                    <DonutPie\n                        label={'value is ' + item.value}\n                        key={'pie' + item.id}\n                        id={item.id}\n                        cx={0}\n                        cy={0}\n                        radius={radius * 0.8}\n                        fill={item.color}\n                        startAngle={item.animStartAngle}\n                        endAngle={item.animEndAngle}\n                        donut={donut}\n                        highlight={item.highlight === true}\n                        onSelect={this.onSelect}\n                    />\n                ))}\n                <Centre\n                    cx=\"0\"\n                    cy=\"0\"\n                    radius={donut * radius * 0.8}\n                    fill={discColor}\n                    text=\"Hello World\"\n                />\n                {data.map(item => (\n                    <Label\n                        text={'value is ' + item.value}\n                        key={'label' + item.id}\n                        cx={0}\n                        cy={0}\n                        radius={radius * 0.8}\n                        startAngle={item.animStartAngle}\n                        endAngle={item.animEndAngle}\n                        donut={donut}\n                    />\n                ))}\n            </svg>\n        );\n    }\n\n    animate() {\n        const me = this;\n        const state = me.state;\n\n        if (state.animAngle < state.maxAngle) {\n            requestAnimationFrame(me.animate);\n        }\n\n        me.setState(getNextAnimationState);\n    }\n\n    onSelect(event) {\n        const index = event.target.getAttribute('data-id') | 0;\n        const selected = this.state.data[index];\n\n        if (selected.highlight !== true) {\n            this.setState(state =>\n                Object.assign({}, state, {\n                    data: state.data.map(item => {\n                        if (item === selected) {\n                            return Object.assign({}, item, {\n                                highlight: true,\n                            });\n                        } else if (item.highlight) {\n                            return Object.assign({}, item, {\n                                highlight: false,\n                            });\n                        } else {\n                            return item;\n                        }\n                    }),\n                })\n            );\n        }\n    }\n}\n"],"names":["MATH","Math","round","number","precisionTo","precision","pow","radian","degree","PI","getArcPoint","cx","cy","radius","theta","x","cos","y","sin","getDonutPath","startDegree","endDegree","donutRatio","donut","undefined","a","b","d","c","largeArcFlag","abs","getTransform","startAngle","endAngle","React","memo","props","onClick","onSelect","transform","highlight","id","fill","stroke","r","textAnchor","text","angle","randomColor","random","toString","getRandomColor","calculateAngles","data","total","Array","prototype","reduce","call","arguments","accumulator","item","apply","map","value","i","animStartAngle","animEndAngle","color","getNextAnimationState","state","animAngle","_animStartAngle","Object","assign","pie","min","ReactDOM","render","PureComponent","constructor","me","this","discColor","maxAngle","max","bind","animate","componentDidMount","dimension","width","height","viewBox","DonutPie","label","key","Centre","Label","requestAnimationFrame","setState","event","index","target","getAttribute","selected","join","split","document","getElementById"],"mappings":"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"}