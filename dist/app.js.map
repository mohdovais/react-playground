{"version":3,"file":"app.js","sources":["../src/option-country.tsx","../src/Application.tsx","../src/app.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo } from '../packages/utils/react';\nimport { Country } from './Application';\nimport {\n    wrapper as $wrapper,\n    flag as $flag,\n    details as $details,\n    capital as $capital\n} from './option-country.module.css';\n\ntype CountryOptionProps = {\n    country: Country;\n};\n\nexport function CountryOption({ country }: CountryOptionProps) {\n    return (\n        <div className={$wrapper}>\n            <img src={country.flag} className={$flag} />\n            <div className={$details}>\n                <div>{country.name}</div>\n                <div className={$capital}>{country.capital}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(CountryOption);\n","import * as React from 'react';\nimport { useState, useEffect, useCallback } from '../packages/utils/react';\nimport Combobox from '../packages/combobox';\nimport OptionCountry from './option-country';\n\ntype Language = {\n    code: string;\n    name: string;\n};\n\ntype Currency = {\n    code: string;\n    name: string;\n    symbol: string;\n};\n\nexport type Country = {\n    name: string;\n    code: string;\n    capital: string;\n    region: string;\n    currency: Currency;\n    language: Language;\n    flag: string;\n};\n\nexport function Application() {\n    const [countries, setCountries] = useState<Country[]>([]);\n    const [remoteData, setRemoteData] = useState([]);\n\n    useEffect(() => {\n        fetch('/data/countries.json')\n            .then((response) => response.json())\n            .then(setCountries);\n    }, []);\n\n    const remoteQuery = useCallback(\n        function (query: string) {\n            query = query.trim();\n            if (query === '') return [];\n            return new Promise<Country[]>(function (resolve, reject) {\n                const re = new RegExp(query, 'i');\n                const result = countries.filter((country) => {\n                    return re.test(country.name) || re.test(country.capital);\n                });\n                resolve(result);\n            });\n        },\n        [countries]\n    );\n\n    const optionRenderer = useCallback(function (country: Country) {\n        return <OptionCountry country={country} />;\n    }, []);\n\n    return (\n        <div>\n            <h5>Normal</h5>\n            <Combobox data={countries} displayField=\"name\" />\n            <h5>Read Only</h5>\n            <Combobox readOnly data={countries} displayField=\"name\" />\n            <h5>Disabled</h5>\n            <Combobox disabled data={countries} displayField=\"name\" />\n            <h5>Search</h5>\n            <Combobox\n                displayField=\"name\"\n                queryMode=\"remote\"\n                onRemoteQuery={remoteQuery}\n                optionRenderer={optionRenderer}\n                hideTrigger\n            />\n        </div>\n    );\n}\n","import * as ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Application } from './Application';\n\nfunction render(container: HTMLDivElement) {\n    ReactDOM.render(<Application />, container);\n}\n\nfunction unmount(container: HTMLDivElement) {\n    ReactDOM.unmountComponentAtNode(container);\n}\n\nexport default {\n    render,\n    unmount,\n};\n"],"names":["memo","country","className","src","flag","name","capital","useState","then","response","json","setCountries","useCallback","query","trim","Promise","RegExp","countries","filter","re","test","OptionCountry","Combobox","data","displayField","readOnly","disabled","queryMode","onRemoteQuery","remoteQuery","optionRenderer","hideTrigger","render","container","Application2","unmount"],"mappings":"wHA0BA,MAAeA,aAZeC,QAAEA,2BAEvB,MAAD,CAAKC,mCACA,MAAD,CAAKC,IAAKF,EAAQG,KAAMF,qCACvB,MAAD,CAAKA,oCACA,MAAD,KAAMD,EAAQI,sBACb,MAAD,CAAKH,oBAAsBD,EAAQK,sCCObC,EAAoB,UAClBA,EAAS,OAEnC,WACA,wBACDC,SAAmBC,EAASC,SAC5BF,KAAKG,KACX,YAEiBC,GAChB,kBAEkB,QADNC,EAAMC,QACW,GAClB,IAAIC,SAAmB,sBACf,IAAIC,OAAOH,EAAO,OACdI,EAAUC,WACdC,EAAGC,KAAKnB,EAAQI,OAASc,EAAGC,KAAKnB,EAAQK,iBAK5D,CAACW,MAGkBL,GAAY,mCACvBS,EAAD,CAAepB,QAAAA,MACvB,2BAGE,MAAD,qBACK,KAAD,KAAI,0BACHqB,EAAD,CAAUC,KAAMN,EAAWO,aAAa,yBACvC,KAAD,KAAI,6BACHF,EAAD,CAAUG,UAAQ,EAACF,KAAMN,EAAWO,aAAa,yBAChD,KAAD,KAAI,4BACHF,EAAD,CAAUI,UAAQ,EAACH,KAAMN,EAAWO,aAAa,yBAChD,KAAD,KAAI,0BACHF,EAAD,CACIE,aAAa,OACbG,UAAU,SACVC,cAAeC,EACfC,eAAAA,EACAC,aAAW,KCzD3B,MAAe,CACXC,OATJ,SAAgBC,4BACKC,EAAD,MAAiBD,IASjCE,QANJ,qCACoCF"}