{"version":3,"file":"framework-4c0c0e8f.js","sources":["../packages/utils/react.ts","../packages/utils/array.ts","../packages/combobox/listbox.tsx","../packages/utils/dom.ts","../packages/combobox/use-position.ts","../packages/utils/object.ts","../packages/combobox/combobox.store.ts","../packages/combobox/use-actions.ts","../packages/utils/common.ts","../packages/utils/function.ts","../packages/combobox/combobox.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default React;\nexport const memo = React.memo;\nexport const useCallback = React.useCallback;\nexport const useState = React.useState;\nexport const useRef = React.useRef;\nexport const useReducer = React.useReducer;\nexport const useEffect = React.useEffect;\n","export function ensureArray<T = undefined>(subject?: T | T[] | null) {\n    if (subject == null) return [];\n    if (Array.isArray(subject)) return subject;\n    return [subject];\n}\n","import React, { memo, useEffect } from '../utils/react';\nimport { ensureArray } from '../utils/array';\nimport { Json } from './combobox.store';\nimport {\n    listbox as $listbox,\n    option as $option,\n    focus as $focus,\n    selected as $selected,\n    _default as $default,\n} from './listbox.module.css';\n\nexport type OptionRenderer<T> = React.Component<ListBoxItemContentProps<T>>;\n\nexport interface ListBoxProps<T> {\n    className?: string;\n    id: string;\n    data?: T[];\n    displayField: string;\n    selected?: T;\n    onSelect: (selection: T) => void;\n    focusIndex: number;\n    expanded: boolean;\n    style: React.CSSProperties;\n    optionRenderer?: OptionRenderer<T>;\n}\n\nexport interface ListBoxItemProps {\n    id: string;\n    className: string;\n    children: any;\n    onClick: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n}\n\nexport interface ListBoxItemContentProps<T> {\n    record: T;\n    selected: boolean;\n    displayField: string;\n}\n\nfunction ListBoxItem(props: ListBoxItemProps) {\n    const { id, onClick, className, children } = props;\n    return (\n        <li\n            role=\"option\"\n            id={id}\n            className={$option + ' ' + className}\n            onClick={onClick}>\n            {children}\n        </li>\n    );\n}\n\nfunction ListBoxItemContent<T extends Json>({\n    record,\n    displayField,\n}: ListBoxItemContentProps<T>) {\n    return <div className={$default}>{record[displayField]}</div>;\n}\n\nconst ListBoxItemMemo = memo(ListBoxItem);\nconst ListBoxItemContentMemo = memo(ListBoxItemContent);\n\nfunction ListBox(props: ListBoxProps<Json>) {\n    const {\n        id,\n        className = '',\n        data,\n        displayField,\n        selected,\n        focusIndex,\n        expanded,\n        style,\n        onSelect,\n        optionRenderer,\n    } = props;\n\n    const idPrefx = id + '-option-';\n    const OptionRenderer =\n        typeof optionRenderer === 'function'\n            ? optionRenderer\n            : ListBoxItemContentMemo;\n\n    useEffect(() => {\n        if (focusIndex > -1) {\n            const li = document.getElementById(idPrefx + focusIndex);\n            if (li) {\n                li.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n            }\n        }\n    }, [focusIndex]);\n\n    const items = ensureArray<Json>(data);\n\n    return (\n        <ul\n            id={id}\n            role=\"listbox\"\n            className={$listbox + ' ' + className}\n            style={style}\n            tabIndex={-1}>\n            {expanded\n                ? items.map((item, index) => {\n                      const liId = idPrefx + index;\n                      const isSelected = selected === item;\n                      const liClassName = [\n                          focusIndex === index ? 'focus ' + $focus : '',\n                          isSelected ? 'selected ' + $selected : '',\n                      ]\n                          .filter(Boolean)\n                          .join(' ');\n                      return (\n                          <ListBoxItemMemo\n                              key={liId}\n                              id={liId}\n                              className={liClassName}\n                              onClick={() => onSelect(item)}>\n                              <OptionRenderer\n                                  record={item}\n                                  selected={isSelected}\n                                  displayField={displayField}\n                              />\n                          </ListBoxItemMemo>\n                      );\n                  })\n                : null}\n        </ul>\n    );\n}\n\nexport default memo(ListBox);\n","export const win = window;\nexport const addEventListener = win.addEventListener;\nexport const removeEventListener = win.removeEventListener;","import React, { useState, useEffect } from '../utils/react';\nimport { win, addEventListener, removeEventListener } from '../utils/dom';\n\nconst displayNone = {\n    display: 'none',\n};\n\nfunction getPosition(el: HTMLDivElement | null): React.CSSProperties {\n    if (el == null) {\n        return displayNone;\n    }\n    const viewportHeight = win.innerHeight;\n    const { top, bottom, height } = el.getBoundingClientRect();\n\n    if (top < 0 || top > viewportHeight) {\n        return displayNone;\n    }\n\n    const bottomSpace = viewportHeight - bottom;\n\n    if (top < bottomSpace) {\n        return {\n            top: height,\n            maxHeight: viewportHeight - bottom - 5,\n        };\n    }\n\n    return {\n        bottom: height,\n        maxHeight: top - 5,\n    };\n}\n\nexport function usePickerPosition(\n    ref: React.RefObject<HTMLDivElement>,\n    calculate: boolean\n) {\n    const current = ref.current;\n    const [postion, setPosition] = useState(() => getPosition(current));\n\n    useEffect(() => {\n        let busy = false;\n        function doCalculate() {\n            if (calculate && !busy) {\n                busy = true;\n                win.requestAnimationFrame(() => {\n                    setPosition(getPosition(current));\n                    busy = false;\n                });\n            }\n        }\n        addEventListener('resize', doCalculate);\n        addEventListener('scroll', doCalculate);\n\n        if (calculate) {\n            doCalculate();\n        } else {\n            setPosition(displayNone);\n        }\n\n        return () => {\n            removeEventListener('resize', doCalculate);\n            removeEventListener('scroll', doCalculate);\n        };\n    }, [calculate, current]);\n\n    return postion;\n}\n","const O = Object;\nexport const assign = O.assign;\n\nexport function extend<T, S>(a: T, b: S): {} & T & S {\n    return assign({}, a, b);\n}\n\nexport function hasOwnProperty(object: any, property: string): boolean {\n    return O.prototype.hasOwnProperty.call(object, property);\n}\n","import { extend } from '../utils/object';\n\nexport const ACTION_TYPE_COLLAPSE = 0;\nexport const ACTION_TYPE_EXPAND = 1;\nexport const ACTION_TYPE_TOGGLE = 2;\nexport const ACTION_TYPE_KEY_ARROW_DOWN = 3;\nexport const ACTION_TYPE_KEY_ARROW_UP = 4;\nexport const ACTION_TYPE_KEY_ENTER = 5;\nexport const ACTION_TYPE_SELECT = 6;\nexport const ACTION_TYPE_SET_DATA = 7;\nexport const ACTION_TYPE_LOCAL_SEARCH = 8;\nexport const ACTION_TYPE_SET_DATA_AND_EXPAND = 9;\nexport const ACTION_TYPE_SET_WAITING = 10;\n\n// not actual definition of JSON (null and Array not used)\nexport type Json = {\n    [prop: string]: string | number | boolean | Date | Json | Json[];\n};\n\nexport interface ComboboxState<T> {\n    id: string;\n    waiting: boolean;\n    displayField: string;\n    expanded: boolean;\n    focusIndex: number;\n    selection?: T;\n    data: T[];\n    range: T[];\n}\n\nexport interface ComboboxActionCollpase {\n    type: typeof ACTION_TYPE_COLLAPSE;\n}\n\nexport interface ComboboxActionExpand {\n    type: typeof ACTION_TYPE_EXPAND;\n}\n\nexport interface ComboboxActionToggle {\n    type: typeof ACTION_TYPE_TOGGLE;\n}\n\nexport interface CompobobxActionArrowDown {\n    type: typeof ACTION_TYPE_KEY_ARROW_DOWN;\n}\n\nexport interface ComboboxActionArrowUp {\n    type: typeof ACTION_TYPE_KEY_ARROW_UP;\n}\n\nexport interface ComboboxActionEnter {\n    type: typeof ACTION_TYPE_KEY_ENTER;\n}\n\nexport interface ComboboxActionSelect<T> {\n    type: typeof ACTION_TYPE_SELECT;\n    selection: T;\n}\n\nexport interface ComboboxActionSetData<T> {\n    type: typeof ACTION_TYPE_SET_DATA;\n    data: T[];\n}\n\nexport interface ComboboxActionSearch {\n    type: typeof ACTION_TYPE_LOCAL_SEARCH;\n    query: string;\n}\n\nexport interface ComboboxActionSetDataAndExpand<T> {\n    type: typeof ACTION_TYPE_SET_DATA_AND_EXPAND;\n    data: T[];\n}\n\nexport interface ComboboxActionSetWating {\n    type: typeof ACTION_TYPE_SET_WAITING;\n    waiting: boolean;\n}\n\nexport type ComboboxAction<T> =\n    | ComboboxActionCollpase\n    | ComboboxActionExpand\n    | ComboboxActionToggle\n    | CompobobxActionArrowDown\n    | ComboboxActionArrowUp\n    | ComboboxActionEnter\n    | ComboboxActionSelect<T>\n    | ComboboxActionSetData<T>\n    | ComboboxActionSearch\n    | ComboboxActionSetDataAndExpand<T>\n    | ComboboxActionSetWating;\n\nexport const initialState = {\n    id: '',\n    displayField: '',\n    expanded: false,\n    waiting: false,\n    focusIndex: -1,\n    selection: undefined,\n    data: [],\n    range: [],\n};\n\nexport function comboboxReducer<T extends Json>(\n    state: ComboboxState<T>,\n    action: ComboboxAction<T>\n): ComboboxState<T> {\n    switch (action.type) {\n        case ACTION_TYPE_COLLAPSE:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n            });\n\n        case ACTION_TYPE_EXPAND:\n            return extend(state, {\n                expanded: true,\n            });\n\n        case ACTION_TYPE_TOGGLE:\n            return comboboxReducer(state, {\n                type: state.expanded\n                    ? ACTION_TYPE_COLLAPSE\n                    : ACTION_TYPE_EXPAND,\n            });\n\n        case ACTION_TYPE_KEY_ARROW_DOWN: {\n            let count = state.range.length;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (state.focusIndex + 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ARROW_UP: {\n            let count = state.range.length;\n            let index = state.focusIndex === -1 ? count : state.focusIndex;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (count + index - 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ENTER:\n            if (state.focusIndex !== -1) {\n                return extend(state, {\n                    expanded: false,\n                    focusIndex: -1,\n                    range: state.data,\n                    selection: state.range[state.focusIndex],\n                });\n            }\n            break;\n\n        case ACTION_TYPE_SELECT:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n                range: state.data,\n                selection: action.selection,\n            });\n\n        case ACTION_TYPE_SET_DATA: {\n            let data = action.data;\n            return extend(state, {\n                data,\n                range: data,\n            });\n        }\n\n        case ACTION_TYPE_LOCAL_SEARCH: {\n            const search = new RegExp(action.query, 'i');\n            return extend(state, {\n                expanded: true,\n                range: state.data.filter((record) =>\n                    search.test(record[state.displayField].toString())\n                ),\n            });\n        }\n\n        case ACTION_TYPE_SET_DATA_AND_EXPAND:\n            return extend(state, {\n                expanded: true,\n                focusIndex: -1,\n                waiting: false,\n                data: action.data,\n                range: action.data,\n            });\n\n        case ACTION_TYPE_SET_WAITING:\n            return extend(state, {\n                waiting: action.waiting,\n            });\n    }\n\n    return state;\n}\n","import { useCallback } from '../utils/react';\nimport {\n    ACTION_TYPE_COLLAPSE,\n    ACTION_TYPE_EXPAND,\n    ACTION_TYPE_KEY_ARROW_DOWN,\n    ACTION_TYPE_KEY_ARROW_UP,\n    ACTION_TYPE_KEY_ENTER,\n    ACTION_TYPE_LOCAL_SEARCH,\n    ACTION_TYPE_SELECT,\n    ACTION_TYPE_SET_DATA,\n    ACTION_TYPE_SET_DATA_AND_EXPAND,\n    ACTION_TYPE_TOGGLE,\n    ACTION_TYPE_SET_WAITING,\n    ComboboxAction,\n} from './combobox.store';\n\nexport function useComboboxActions<Json>(\n    dispatch: React.Dispatch<ComboboxAction<Json>>\n) {\n    const expand = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_EXPAND });\n        },\n        [dispatch]\n    );\n\n    const collapse = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_COLLAPSE });\n        },\n        [dispatch]\n    );\n\n    const toggle = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_TOGGLE });\n        },\n        [dispatch]\n    );\n\n    const select = useCallback(\n        function (selection: Json) {\n            dispatch({\n                type: ACTION_TYPE_SELECT,\n                selection,\n            });\n        },\n        [dispatch]\n    );\n\n    const handleKeys = useCallback(\n        function (event: React.KeyboardEvent<HTMLInputElement>) {\n            switch (event.key) {\n                case 'ArrowDown': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_DOWN });\n                    break;\n                }\n                case 'ArrowUp': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_UP });\n                    break;\n                }\n                case 'Escape':\n                    collapse();\n                    break;\n                case 'Enter':\n                    dispatch({ type: ACTION_TYPE_KEY_ENTER });\n                    break;\n            }\n        },\n        [dispatch]\n    );\n\n    const handleLocalSearch = useCallback(\n        function (query: string) {\n            dispatch({\n                type: ACTION_TYPE_LOCAL_SEARCH,\n                query,\n            });\n        },\n        [dispatch]\n    );\n\n    const setData = useCallback(\n        function (data: Json[]) {\n            dispatch({ type: ACTION_TYPE_SET_DATA, data });\n        },\n        [dispatch]\n    );\n\n    const handleRemoteSearch = useCallback(\n        function (data: Json[]) {\n            dispatch({ type: ACTION_TYPE_SET_DATA_AND_EXPAND, data });\n        },\n        [dispatch]\n    );\n\n    const setWaiting = useCallback(\n        function (waiting: boolean) {\n            dispatch({ type: ACTION_TYPE_SET_WAITING, waiting });\n        },\n        [dispatch]\n    );\n\n    return {\n        expand,\n        collapse,\n        toggle,\n        select,\n        handleKeys,\n        handleLocalSearch,\n        setData,\n        handleRemoteSearch,\n        setWaiting\n    };\n}\n","const { round, random } = Math;\n\nexport function randomId(prefix = '') {\n    return prefix + round(random() + random() * 10e16).toString(32);\n}\n","export function debounced(\n    task: Function,\n    duration: number = 250,\n    scope?: Object\n) {\n    let timer: number;\n\n    return function() {\n        function later(arg: any[]) {\n            clearTimeout(timer);\n            task.apply(scope, arg);\n        }\n\n        clearTimeout(timer);\n\n        //Array.from\n        timer = setTimeout(later, duration, Array.prototype.slice.call(arguments));\n    };\n}\n","import React, {\n    useCallback,\n    useRef,\n    useReducer,\n    useEffect,\n    memo,\n} from '../utils/react';\nimport ListBox, { OptionRenderer } from './listbox';\nimport { usePickerPosition } from './use-position';\nimport { comboboxReducer, initialState, Json } from './combobox.store';\nimport { useComboboxActions } from './use-actions';\nimport { randomId } from '../utils/common';\nimport { debounced } from '../utils/function';\nimport {\n    combobox as $combobox,\n    input_wrapper as $input_wrapper,\n    input as $input,\n    trigger as $trigger,\n    picker as $picker,\n    waiting as $waiting,\n} from './combobox.module.scss';\nimport { extend } from '../utils/object';\n\nexport interface ComboboxCommonProps<T> {\n    displayField?: string;\n    valueField?: string;\n    onChange?: (selection?: T) => void;\n    optionRenderer?: OptionRenderer<T>;\n    displayRenderer?: (record: T) => JSX.Element | string;\n    hideTrigger?: boolean;\n    disabled?: boolean;\n    readOnly?: boolean;\n    className?: string;\n    forceSelection?: boolean;\n}\n\nexport interface ComboboxLocalProps<T> extends ComboboxCommonProps<T> {\n    queryMode?: 'local';\n    data: T[];\n    onRemoteQuery?: undefined;\n}\n\nexport interface ComboboxRemoteProps<T> extends ComboboxCommonProps<T> {\n    queryMode: 'remote';\n    data?: undefined;\n    onRemoteQuery: (search: string) => T[] | Promise<T[]>;\n}\n\nexport type ComboboxProps<T> = ComboboxLocalProps<T> | ComboboxRemoteProps<T>;\n\nfunction focus(ref: React.RefObject<HTMLElement>) {\n    let el = ref.current;\n    if (el) {\n        el.focus();\n    }\n}\n\nfunction Combobox(props: ComboboxProps<Json>) {\n    const comboboxRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const {\n        queryMode = 'local',\n        displayField = 'text',\n        className = '',\n        forceSelection = true,\n        data,\n        hideTrigger,\n        disabled,\n        readOnly,\n        onChange,\n        onRemoteQuery,\n        optionRenderer,\n        displayRenderer,\n    } = props;\n\n    const [state, dispatch] = useReducer(\n        comboboxReducer,\n        initialState,\n        (state) => extend(state, { id: randomId('combobox-'), displayField })\n    );\n\n    const {\n        toggle,\n        select,\n        collapse,\n        handleKeys,\n        handleRemoteSearch,\n        handleLocalSearch,\n        setData,\n        setWaiting,\n    } = useComboboxActions(dispatch);\n\n    const { id, expanded, selection, range, focusIndex, waiting } = state;\n    const pickerStyle = usePickerPosition(comboboxRef, expanded);\n    const pickerId = id + '-picker';\n    const activeDescendantId =\n        expanded && focusIndex === -1 ? '' : pickerId + '-option-' + focusIndex;\n\n    const handleTriggerClick = useCallback(() => {\n        focus(inputRef);\n        toggle();\n    }, [inputRef]);\n\n    const handleInput = useCallback(\n        debounced((event: React.FormEvent<HTMLInputElement>) => {\n            const input = event.target as HTMLInputElement;\n            const text = input.value;\n            if (queryMode === 'local') {\n                handleLocalSearch(text);\n            } else {\n                setWaiting(true);\n                Promise.resolve(\n                    typeof onRemoteQuery === 'function' && onRemoteQuery(text)\n                ).then((data) => {\n                    data !== false && handleRemoteSearch(data);\n                });\n            }\n        }),\n        [\n            queryMode,\n            onRemoteQuery,\n            setWaiting,\n            handleLocalSearch,\n            handleRemoteSearch,\n        ]\n    );\n\n    useEffect(() => {\n        if (data !== undefined) {\n            setData(data);\n        }\n    }, [data]);\n\n    useEffect(() => {\n        const input = inputRef.current;\n        if (input) {\n            input.value = selection\n                ? typeof displayRenderer === 'function'\n                    ? displayRenderer(selection).toString()\n                    : selection[displayField].toString()\n                : '';\n        }\n    }, [selection, displayField, inputRef, displayRenderer]);\n\n    useEffect(() => {\n        if (typeof onChange === 'function') {\n            onChange(selection);\n        }\n    }, [selection, onChange]);\n\n    return (\n        <div\n            className={\n                $combobox +\n                ' ' +\n                className +\n                (waiting ? ' wating ' + $waiting : '')\n            }\n            ref={comboboxRef}>\n            <div\n                className={$input_wrapper}\n                role=\"combobox\"\n                aria-expanded={expanded ? 'true' : 'false'}\n                aria-owns={pickerId}\n                aria-haspopup=\"listbox\">\n                <input\n                    type=\"text\"\n                    aria-autocomplete=\"both\"\n                    aria-controls={pickerId}\n                    aria-activedescendant={activeDescendantId}\n                    onKeyDown={handleKeys}\n                    onInput={handleInput}\n                    className={$input}\n                    ref={inputRef}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                />\n                {hideTrigger ? null : (\n                    <div\n                        className={$trigger}\n                        tabIndex={-1}\n                        role=\"button\"\n                        aria-label=\"Show options\"\n                        onClick={disabled ? undefined : handleTriggerClick}>\n                        ▼\n                    </div>\n                )}\n            </div>\n            <ListBox\n                id={pickerId}\n                data={range}\n                displayField={displayField}\n                focusIndex={focusIndex}\n                expanded={expanded}\n                onSelect={select}\n                selected={selection}\n                optionRenderer={optionRenderer}\n                className={$picker}\n                style={pickerStyle}\n            />\n        </div>\n    );\n}\n\nexport default memo(Combobox);\n"],"names":["React.memo","React.useCallback","React.useState","React.useRef","React.useReducer","React.useEffect","$option","$default","selected","$listbox","$focus","$selected","waiting","$combobox","$waiting","$input_wrapper","$input","$trigger","ListBox","$picker"],"mappings":"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"}