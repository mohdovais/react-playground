{"version":3,"file":"app.umd.js","sources":["../packages/utils/react.ts","../packages/utils/object.ts","../packages/combobox/listbox.tsx","../packages/utils/array.ts","../packages/utils/dom.ts","../packages/combobox/use-position.ts","../packages/combobox/combobox.store.ts","../packages/utils/common.ts","../packages/combobox/combobox.tsx","../packages/combobox/use-actions.ts","../src/Application.tsx","../src/main.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default React;\nexport const memo = React.memo;\nexport const useCallback = React.useCallback;\nexport const useState = React.useState;\nexport const useRef = React.useRef;\nexport const useReducer = React.useReducer;\nexport const useEffect = React.useEffect;\n","const O = Object;\nexport const assign = O.assign;\n\nexport function extend<T, S>(a: T, b: S): {} & T & S {\n    return assign({}, a, b);\n}\n\nexport function hasOwnProperty(object: any, property: string): boolean {\n    return O.prototype.hasOwnProperty.call(object, property);\n}\n","import React, { memo, useEffect } from '../utils/react';\nimport { ensureArray } from '../utils/array';\nimport { hasOwnProperty } from '../utils/object';\nimport { Json } from './combobox.store';\nimport {\n    listbox as $listbox,\n    option as $option,\n    focus as $focus,\n    selected as $selected,\n} from './listbox.module.css';\n\nexport interface ListBoxProps<T> {\n    className?: string;\n    id: string;\n    data?: T[];\n    displayField: string;\n    selected?: T;\n    onSelect: (selection: T) => void;\n    focusIndex: number;\n    expanded: boolean;\n    style: React.CSSProperties;\n    optionRenderer?: (record: T) => JSX.Element | string;\n}\n\nfunction ListBox(props: ListBoxProps<Json>) {\n    const {\n        id,\n        className = '',\n        data,\n        displayField,\n        selected,\n        focusIndex,\n        expanded,\n        style,\n        onSelect,\n        optionRenderer,\n    } = props;\n\n    const idPrefx = id + '-option-';\n\n    useEffect(() => {\n        if (focusIndex > -1) {\n            const li = document.getElementById(idPrefx + focusIndex);\n            if (li) {\n                li.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n            }\n        }\n    }, [focusIndex]);\n\n    return (\n        <ul\n            id={id}\n            role=\"listbox\"\n            className={$listbox + ' ' + className}\n            style={style}>\n            {expanded\n                ? ensureArray<Json>(data).map((item, index) => (\n                      <li\n                          key={idPrefx + index}\n                          role=\"option\"\n                          id={idPrefx + index}\n                          className={\n                              $option +\n                              (focusIndex === index ? ' ' + $focus : '') +\n                              (selected === item ? ' ' + $selected : '')\n                          }\n                          onClick={() => onSelect(item)}>\n                          {typeof optionRenderer === 'function'\n                              ? optionRenderer(item)\n                              : hasOwnProperty(item, displayField)\n                              ? String(item[displayField])\n                              : null}\n                      </li>\n                  ))\n                : null}\n        </ul>\n    );\n}\n\nexport default memo(ListBox);\n","export function ensureArray<T = undefined>(subject?: T | T[] | null) {\n    if (subject == null) return [];\n    if (Array.isArray(subject)) return subject;\n    return [subject];\n}","export const win = window;\nexport const addEventListener = win.addEventListener;\nexport const removeEventListener = win.removeEventListener;","import React, { useState, useEffect } from '../utils/react';\nimport { win, addEventListener, removeEventListener } from '../utils/dom';\n\nconst displayNone = {\n    display: 'none',\n};\n\nfunction getPosition(el: HTMLDivElement | null): React.CSSProperties {\n    if (el == null) {\n        return displayNone;\n    }\n    const viewportHeight = win.innerHeight;\n    const { top, bottom, height } = el.getBoundingClientRect();\n\n    if (top < 0 || top > viewportHeight) {\n        return displayNone;\n    }\n\n    const bottomSpace = viewportHeight - bottom;\n\n    if (top < bottomSpace) {\n        return {\n            top: height,\n            maxHeight: viewportHeight - bottom - 5,\n        };\n    }\n\n    return {\n        bottom: height,\n        maxHeight: top - 5,\n    };\n}\n\nexport function usePickerPosition(\n    ref: React.RefObject<HTMLDivElement>,\n    calculate: boolean\n) {\n    const current = ref.current;\n    const [postion, setPosition] = useState(() => getPosition(current));\n\n    useEffect(() => {\n        let busy = false;\n        function doCalculate() {\n            if (calculate && !busy) {\n                busy = true;\n                win.requestAnimationFrame(() => {\n                    setPosition(getPosition(current));\n                    busy = false;\n                });\n            }\n        }\n        addEventListener('resize', doCalculate);\n        addEventListener('scroll', doCalculate);\n\n        if (calculate) {\n            doCalculate();\n        } else {\n            setPosition(displayNone);\n        }\n\n        return () => {\n            removeEventListener('resize', doCalculate);\n            removeEventListener('scroll', doCalculate);\n        };\n    }, [calculate, current]);\n\n    return postion;\n}\n","import { extend } from '../utils/object';\n\nexport const ACTION_TYPE_COLLAPSE = 0;\nexport const ACTION_TYPE_EXPAND = 1;\nexport const ACTION_TYPE_TOGGLE = 2;\nexport const ACTION_TYPE_KEY_ARROW_DOWN = 3;\nexport const ACTION_TYPE_KEY_ARROW_UP = 4;\nexport const ACTION_TYPE_KEY_ENTER = 5;\nexport const ACTION_TYPE_SELECT = 6;\nexport const ACTION_TYPE_SET_DATA = 7;\nexport const ACTION_TYPE_SEARCH = 8;\n\n// not actual definition of JSON (null and Array not used)\nexport type Json = { [prop: string]: string | number | boolean | Date };\n\nexport interface ComboboxState<T> {\n    id: string;\n    displayField: string;\n    expanded: boolean;\n    focusIndex: number;\n    selection?: T;\n    data: T[];\n    range: T[];\n}\n\nexport interface ComboboxActionCollpase {\n    type: typeof ACTION_TYPE_COLLAPSE;\n}\n\nexport interface ComboboxActionExpand {\n    type: typeof ACTION_TYPE_EXPAND;\n}\n\nexport interface ComboboxActionToggle {\n    type: typeof ACTION_TYPE_TOGGLE;\n}\n\nexport interface CompobobxActionArrowDown {\n    type: typeof ACTION_TYPE_KEY_ARROW_DOWN;\n}\n\nexport interface ComboboxActionArrowUp {\n    type: typeof ACTION_TYPE_KEY_ARROW_UP;\n}\n\nexport interface ComboboxActionEnter {\n    type: typeof ACTION_TYPE_KEY_ENTER;\n}\n\nexport interface ComboboxActionSelect<T> {\n    type: typeof ACTION_TYPE_SELECT;\n    selection: T;\n}\n\nexport interface ComboboxActionSetData<T> {\n    type: typeof ACTION_TYPE_SET_DATA;\n    data: T[];\n}\n\nexport interface ComboboxActionSearch {\n    type: typeof ACTION_TYPE_SEARCH;\n    query: string;\n}\n\nexport type ComboboxAction<T> =\n    | ComboboxActionCollpase\n    | ComboboxActionExpand\n    | ComboboxActionToggle\n    | CompobobxActionArrowDown\n    | ComboboxActionArrowUp\n    | ComboboxActionEnter\n    | ComboboxActionSelect<T>\n    | ComboboxActionSetData<T>\n    | ComboboxActionSearch;\n\nexport const initialState = {\n    displayField: '',\n    expanded: false,\n    focusIndex: -1,\n    selection: undefined,\n    data: [],\n    range: [],\n};\n\nexport function comboboxReducer(\n    state: ComboboxState<Json>,\n    action: ComboboxAction<Json>\n) {\n    switch (action.type) {\n        case ACTION_TYPE_COLLAPSE:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n            });\n\n        case ACTION_TYPE_EXPAND:\n            return extend(state, {\n                expanded: true,\n            });\n\n        case ACTION_TYPE_TOGGLE:\n            return extend(state, {\n                expanded: !state.expanded,\n            });\n\n        case ACTION_TYPE_KEY_ARROW_DOWN: {\n            let count = state.range.length;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (state.focusIndex + 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ARROW_UP: {\n            let count = state.range.length;\n            let index = state.focusIndex === -1 ? count : state.focusIndex;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (count + index - 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ENTER:\n            if (state.focusIndex !== -1) {\n                return extend(state, {\n                    expanded: false,\n                    focusIndex: -1,\n                    range: state.data,\n                    selection: state.range[state.focusIndex],\n                });\n            }\n            break;\n\n        case ACTION_TYPE_SELECT:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n                range: state.data,\n                selection: action.selection,\n            });\n\n        case ACTION_TYPE_SET_DATA: {\n            let data = action.data;\n            return extend(state, {\n                data,\n                range: data,\n            });\n        }\n\n        case ACTION_TYPE_SEARCH: {\n            const search = new RegExp(action.query, 'i');\n            return extend(state, {\n                expanded: true,\n                range: state.data.filter((record) =>\n                    search.test(record[state.displayField].toString())\n                ),\n            });\n        }\n    }\n\n    return state;\n}\n","const { round, random } = Math;\n\nexport function randomId(prefix = '') {\n    return prefix + round(random() + random() * 10e16).toString(32);\n}\n","import React, {\n    useCallback,\n    useRef,\n    useReducer,\n    useEffect,\n} from '../utils/react';\nimport ListBox from './listbox';\nimport { usePickerPosition } from './use-position';\nimport { comboboxReducer, initialState, Json } from './combobox.store';\nimport { useComboboxActions } from './use-actions';\nimport { randomId } from '../utils/common';\nimport {\n    combobox as $combobox,\n    input_wrapper as $input_wrapper,\n    input as $input,\n    trigger as $trigger,\n    picker as $picker,\n} from './combobox.module.scss';\nimport { extend } from '../utils/object';\n\nexport interface ComboboxProps<T> {\n    displayField?: string;\n    valueField?: string;\n    queryMode?: 'remote' | 'local';\n    data: T[];\n    onChange?: (selection?: T) => void;\n    optionRenderer?: (record: T) => JSX.Element | string;\n    displayRenderer?: (record: T) => JSX.Element | string;\n    query?: (search: string) => T[];\n}\n\nexport function Combobox(props: ComboboxProps<Json>) {\n    const {\n        data,\n        displayField = 'text',\n        onChange,\n        optionRenderer,\n        displayRenderer,\n    } = props;\n    const comboboxRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [state, dispatch] = useReducer(\n        comboboxReducer,\n        initialState,\n        (state) => extend(state, { id: randomId('combobox'), displayField })\n    );\n    const {\n        toggle,\n        select,\n        handleKeys,\n        handleInput,\n        setData,\n    } = useComboboxActions(dispatch);\n    const { id, expanded, selection, range, focusIndex } = state;\n    const pickerStyle = usePickerPosition(comboboxRef, expanded);\n    const pickerId = id + '-picker';\n    const activeDescendantId =\n        expanded && focusIndex === -1 ? '' : pickerId + '-option-' + focusIndex;\n\n    const handleTriggerClick = useCallback(\n        function () {\n            let el = inputRef.current;\n            if (el) {\n                el.focus();\n            }\n            toggle();\n        },\n        [inputRef]\n    );\n\n    useEffect(() => {\n        setData(data);\n    }, [data]);\n\n    useEffect(() => {\n        const input = inputRef.current;\n        if (input) {\n            input.value = selection\n                ? typeof displayRenderer === 'function'\n                    ? displayRenderer(selection).toString()\n                    : selection[displayField].toString()\n                : '';\n        }\n    }, [selection, displayField, inputRef, displayRenderer]);\n\n    useEffect(() => {\n        if (typeof onChange === 'function') {\n            onChange(selection);\n        }\n    }, [selection, onChange]);\n\n    return (\n        <div className={$combobox} ref={comboboxRef}>\n            <div\n                className={$input_wrapper}\n                role=\"combobox\"\n                aria-expanded={expanded ? 'true' : 'false'}\n                aria-owns={pickerId}\n                aria-haspopup=\"listbox\">\n                <input\n                    type=\"text\"\n                    aria-autocomplete=\"both\"\n                    aria-controls={pickerId}\n                    aria-activedescendant={activeDescendantId}\n                    onKeyDown={handleKeys}\n                    onInput={handleInput}\n                    className={$input}\n                    ref={inputRef}\n                />\n                <div\n                    className={$trigger}\n                    tabIndex={-1}\n                    role=\"button\"\n                    aria-label=\"Show options\"\n                    onClick={handleTriggerClick}>\n                    ▼\n                </div>\n            </div>\n            <ListBox\n                id={pickerId}\n                data={range}\n                displayField={displayField}\n                focusIndex={focusIndex}\n                expanded={expanded}\n                onSelect={select}\n                selected={selection}\n                optionRenderer={optionRenderer}\n                className={$picker}\n                style={pickerStyle}\n            />\n        </div>\n    );\n}\n","import { useCallback } from '../utils/react';\nimport {\n    ACTION_TYPE_COLLAPSE,\n    ACTION_TYPE_EXPAND,\n    ACTION_TYPE_KEY_ARROW_DOWN,\n    ACTION_TYPE_KEY_ARROW_UP,\n    ACTION_TYPE_KEY_ENTER,\n    ACTION_TYPE_SEARCH,\n    ACTION_TYPE_SELECT,\n    ACTION_TYPE_SET_DATA,\n    ACTION_TYPE_TOGGLE,\n    ComboboxAction,\n} from './combobox.store';\n\nexport function useComboboxActions<Json>(\n    dispatch: React.Dispatch<ComboboxAction<Json>>\n) {\n    const expand = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_EXPAND });\n        },\n        [dispatch]\n    );\n\n    const collapse = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_COLLAPSE });\n        },\n        [dispatch]\n    );\n\n    const toggle = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_TOGGLE });\n        },\n        [dispatch]\n    );\n\n    const select = useCallback(\n        function (selection: Json) {\n            dispatch({\n                type: ACTION_TYPE_SELECT,\n                selection,\n            });\n        },\n        [dispatch]\n    );\n\n    const handleKeys = useCallback(\n        function (event: React.KeyboardEvent<HTMLInputElement>) {\n            switch (event.key) {\n                case 'ArrowDown': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_DOWN });\n                    break;\n                }\n                case 'ArrowUp': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_UP });\n                    break;\n                }\n                case 'Escape':\n                    collapse();\n                    break;\n                case 'Enter':\n                    dispatch({ type: ACTION_TYPE_KEY_ENTER });\n                    break;\n            }\n        },\n        [dispatch]\n    );\n\n    const handleInput = useCallback(\n        function (event: React.FormEvent<HTMLInputElement>) {\n            const inputEl = event.target as HTMLInputElement;\n            dispatch({\n                type: ACTION_TYPE_SEARCH,\n                query: inputEl.value,\n            });\n        },\n        [dispatch]\n    );\n\n    const setData = useCallback(\n        function (data: Json[]) {\n            dispatch({ type: ACTION_TYPE_SET_DATA, data });\n        },\n        [dispatch]\n    );\n\n    return {\n        expand,\n        collapse,\n        toggle,\n        select,\n        handleKeys,\n        handleInput,\n        setData,\n    };\n}\n","import * as React from 'react';\nimport { useState, useEffect } from '../packages/utils/react';\nimport Combobox from '../packages/combobox';\n\ninterface Language {\n    code: string;\n    name: string;\n}\n\ninterface Currency {\n    code: string;\n    name: string;\n    symbol: string;\n}\n\ninterface Country {\n    name: string;\n    code: string;\n    capital: string;\n    region: string;\n    currency: Currency;\n    language: Language;\n    flag: string;\n}\n\nexport function Application() {\n    const [countries, setCountries] = useState<Country[]>([]);\n\n    useEffect(() => {\n        fetch('/data/countries.json')\n            .then((response) => response.json())\n            .then(setCountries);\n    }, []);\n    return <Combobox data={countries} displayField=\"name\" />;\n}\n","import * as ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Application } from './Application';\n\nfunction render(container: HTMLDivElement) {\n    ReactDOM.render(<Application />, container);\n}\n\nfunction unmount(container: HTMLDivElement) {\n    ReactDOM.unmountComponentAtNode(container);\n}\n\nexport default {\n    render,\n    unmount,\n};\n"],"names":["memo","React.memo","useCallback","React.useCallback","useState","React.useState","useRef","React.useRef","useReducer","React.useReducer","useEffect","React.useEffect","O","Object","assign","a","b","props","id","className","data","displayField","selected","focusIndex","expanded","style","onSelect","optionRenderer","idPrefx","li","document","getElementById","scrollIntoView","behavior","block","role","$listbox","subject","Array","isArray","map","item","index","key","onClick","object","property","prototype","hasOwnProperty","call","String","win","window","addEventListener","removeEventListener","displayNone","display","el","viewportHeight","innerHeight","top","bottom","height","getBoundingClientRect","maxHeight","initialState","selection","range","state","action","type","extend","count","length","search","RegExp","query","filter","record","test","toString","round","random","Math","prefix","onChange","displayRenderer","comboboxRef","inputRef","dispatch","comboboxReducer","state2","randomId","toggle","select","handleKeys","handleInput","setData","expand","collapse","event","inputEl","target","value","useComboboxActions","pickerStyle","ref","calculate","current","postion","setPosition","getPosition","busy","requestAnimationFrame","doCalculate","usePickerPosition","pickerId","activeDescendantId","handleTriggerClick","focus","input","aria-expanded","aria-owns","aria-haspopup","aria-autocomplete","aria-controls","aria-activedescendant","onKeyDown","onInput","tabIndex","aria-label","ListBox","countries","setCountries","then","response","json","Combobox","render","container","Application2","unmount"],"mappings":"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"}