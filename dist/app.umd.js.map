{"version":3,"file":"app.umd.js","sources":["../packages/utils/react.ts","../packages/utils/object.ts","../packages/combobox/listbox.tsx","../packages/utils/array.ts","../packages/utils/dom.ts","../packages/combobox/use-position.ts","../packages/combobox/combobox.store.ts","../packages/utils/common.ts","../packages/combobox/combobox.tsx","../packages/combobox/use-actions.ts","../packages/utils/function.ts","../src/option-country.tsx","../src/Application.tsx","../src/main.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default React;\nexport const memo = React.memo;\nexport const useCallback = React.useCallback;\nexport const useState = React.useState;\nexport const useRef = React.useRef;\nexport const useReducer = React.useReducer;\nexport const useEffect = React.useEffect;\n","const O = Object;\nexport const assign = O.assign;\n\nexport function extend<T, S>(a: T, b: S): {} & T & S {\n    return assign({}, a, b);\n}\n\nexport function hasOwnProperty(object: any, property: string): boolean {\n    return O.prototype.hasOwnProperty.call(object, property);\n}\n","import React, { memo, useEffect } from '../utils/react';\nimport { ensureArray } from '../utils/array';\nimport { hasOwnProperty } from '../utils/object';\nimport { Json } from './combobox.store';\nimport {\n    listbox as $listbox,\n    option as $option,\n    focus as $focus,\n    selected as $selected,\n} from './listbox.module.css';\n\nexport interface ListBoxProps<T> {\n    className?: string;\n    id: string;\n    data?: T[];\n    displayField: string;\n    selected?: T;\n    onSelect: (selection: T) => void;\n    focusIndex: number;\n    expanded: boolean;\n    style: React.CSSProperties;\n    optionRenderer?: (record: T) => JSX.Element | string;\n}\n\nfunction ListBox(props: ListBoxProps<Json>) {\n    const {\n        id,\n        className = '',\n        data,\n        displayField,\n        selected,\n        focusIndex,\n        expanded,\n        style,\n        onSelect,\n        optionRenderer,\n    } = props;\n\n    const idPrefx = id + '-option-';\n\n    useEffect(() => {\n        if (focusIndex > -1) {\n            const li = document.getElementById(idPrefx + focusIndex);\n            if (li) {\n                li.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n            }\n        }\n    }, [focusIndex]);\n\n    return (\n        <ul\n            id={id}\n            role=\"listbox\"\n            className={$listbox + ' ' + className}\n            style={style}\n            tabIndex={-1}>\n            {expanded\n                ? ensureArray<Json>(data).map((item, index) => (\n                      <li\n                          key={idPrefx + index}\n                          role=\"option\"\n                          id={idPrefx + index}\n                          className={\n                              $option +\n                              (focusIndex === index ? ' ' + $focus : '') +\n                              (selected === item ? ' ' + $selected : '')\n                          }\n                          onClick={() => onSelect(item)}>\n                          {typeof optionRenderer === 'function'\n                              ? optionRenderer(item)\n                              : hasOwnProperty(item, displayField)\n                              ? String(item[displayField])\n                              : null}\n                      </li>\n                  ))\n                : null}\n        </ul>\n    );\n}\n\nexport default memo(ListBox);\n","export function ensureArray<T = undefined>(subject?: T | T[] | null) {\n    if (subject == null) return [];\n    if (Array.isArray(subject)) return subject;\n    return [subject];\n}\n","export const win = window;\nexport const addEventListener = win.addEventListener;\nexport const removeEventListener = win.removeEventListener;","import React, { useState, useEffect } from '../utils/react';\nimport { win, addEventListener, removeEventListener } from '../utils/dom';\n\nconst displayNone = {\n    display: 'none',\n};\n\nfunction getPosition(el: HTMLDivElement | null): React.CSSProperties {\n    if (el == null) {\n        return displayNone;\n    }\n    const viewportHeight = win.innerHeight;\n    const { top, bottom, height } = el.getBoundingClientRect();\n\n    if (top < 0 || top > viewportHeight) {\n        return displayNone;\n    }\n\n    const bottomSpace = viewportHeight - bottom;\n\n    if (top < bottomSpace) {\n        return {\n            top: height,\n            maxHeight: viewportHeight - bottom - 5,\n        };\n    }\n\n    return {\n        bottom: height,\n        maxHeight: top - 5,\n    };\n}\n\nexport function usePickerPosition(\n    ref: React.RefObject<HTMLDivElement>,\n    calculate: boolean\n) {\n    const current = ref.current;\n    const [postion, setPosition] = useState(() => getPosition(current));\n\n    useEffect(() => {\n        let busy = false;\n        function doCalculate() {\n            if (calculate && !busy) {\n                busy = true;\n                win.requestAnimationFrame(() => {\n                    setPosition(getPosition(current));\n                    busy = false;\n                });\n            }\n        }\n        addEventListener('resize', doCalculate);\n        addEventListener('scroll', doCalculate);\n\n        if (calculate) {\n            doCalculate();\n        } else {\n            setPosition(displayNone);\n        }\n\n        return () => {\n            removeEventListener('resize', doCalculate);\n            removeEventListener('scroll', doCalculate);\n        };\n    }, [calculate, current]);\n\n    return postion;\n}\n","import { extend } from '../utils/object';\n\nexport const ACTION_TYPE_COLLAPSE = 0;\nexport const ACTION_TYPE_EXPAND = 1;\nexport const ACTION_TYPE_TOGGLE = 2;\nexport const ACTION_TYPE_KEY_ARROW_DOWN = 3;\nexport const ACTION_TYPE_KEY_ARROW_UP = 4;\nexport const ACTION_TYPE_KEY_ENTER = 5;\nexport const ACTION_TYPE_SELECT = 6;\nexport const ACTION_TYPE_SET_DATA = 7;\nexport const ACTION_TYPE_LOCAL_SEARCH = 8;\nexport const ACTION_TYPE_SET_DATA_AND_EXPAND = 9;\nexport const ACTION_TYPE_SET_WAITING = 10;\n\n// not actual definition of JSON (null and Array not used)\nexport type Json = {\n    [prop: string]: string | number | boolean | Date | Json | Json[];\n};\n\nexport interface ComboboxState<T> {\n    id: string;\n    waiting: boolean;\n    displayField: string;\n    expanded: boolean;\n    focusIndex: number;\n    selection?: T;\n    data: T[];\n    range: T[];\n}\n\nexport interface ComboboxActionCollpase {\n    type: typeof ACTION_TYPE_COLLAPSE;\n}\n\nexport interface ComboboxActionExpand {\n    type: typeof ACTION_TYPE_EXPAND;\n}\n\nexport interface ComboboxActionToggle {\n    type: typeof ACTION_TYPE_TOGGLE;\n}\n\nexport interface CompobobxActionArrowDown {\n    type: typeof ACTION_TYPE_KEY_ARROW_DOWN;\n}\n\nexport interface ComboboxActionArrowUp {\n    type: typeof ACTION_TYPE_KEY_ARROW_UP;\n}\n\nexport interface ComboboxActionEnter {\n    type: typeof ACTION_TYPE_KEY_ENTER;\n}\n\nexport interface ComboboxActionSelect<T> {\n    type: typeof ACTION_TYPE_SELECT;\n    selection: T;\n}\n\nexport interface ComboboxActionSetData<T> {\n    type: typeof ACTION_TYPE_SET_DATA;\n    data: T[];\n}\n\nexport interface ComboboxActionSearch {\n    type: typeof ACTION_TYPE_LOCAL_SEARCH;\n    query: string;\n}\n\nexport interface ComboboxActionSetDataAndExpand<T> {\n    type: typeof ACTION_TYPE_SET_DATA_AND_EXPAND;\n    data: T[];\n}\n\nexport interface ComboboxActionSetWating {\n    type: typeof ACTION_TYPE_SET_WAITING;\n    waiting: boolean;\n}\n\nexport type ComboboxAction<T> =\n    | ComboboxActionCollpase\n    | ComboboxActionExpand\n    | ComboboxActionToggle\n    | CompobobxActionArrowDown\n    | ComboboxActionArrowUp\n    | ComboboxActionEnter\n    | ComboboxActionSelect<T>\n    | ComboboxActionSetData<T>\n    | ComboboxActionSearch\n    | ComboboxActionSetDataAndExpand<T>\n    | ComboboxActionSetWating;\n\nexport const initialState = {\n    id: '',\n    displayField: '',\n    expanded: false,\n    waiting: false,\n    focusIndex: -1,\n    selection: undefined,\n    data: [],\n    range: [],\n};\n\nexport function comboboxReducer<T extends Json>(\n    state: ComboboxState<T>,\n    action: ComboboxAction<T>\n): ComboboxState<T> {\n    switch (action.type) {\n        case ACTION_TYPE_COLLAPSE:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n            });\n\n        case ACTION_TYPE_EXPAND:\n            return extend(state, {\n                expanded: true,\n            });\n\n        case ACTION_TYPE_TOGGLE:\n            return comboboxReducer(state, {\n                type: state.expanded\n                    ? ACTION_TYPE_COLLAPSE\n                    : ACTION_TYPE_EXPAND,\n            });\n\n        case ACTION_TYPE_KEY_ARROW_DOWN: {\n            let count = state.range.length;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (state.focusIndex + 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ARROW_UP: {\n            let count = state.range.length;\n            let index = state.focusIndex === -1 ? count : state.focusIndex;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (count + index - 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ENTER:\n            if (state.focusIndex !== -1) {\n                return extend(state, {\n                    expanded: false,\n                    focusIndex: -1,\n                    range: state.data,\n                    selection: state.range[state.focusIndex],\n                });\n            }\n            break;\n\n        case ACTION_TYPE_SELECT:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n                range: state.data,\n                selection: action.selection,\n            });\n\n        case ACTION_TYPE_SET_DATA: {\n            let data = action.data;\n            return extend(state, {\n                data,\n                range: data,\n            });\n        }\n\n        case ACTION_TYPE_LOCAL_SEARCH: {\n            const search = new RegExp(action.query, 'i');\n            return extend(state, {\n                expanded: true,\n                range: state.data.filter((record) =>\n                    search.test(record[state.displayField].toString())\n                ),\n            });\n        }\n\n        case ACTION_TYPE_SET_DATA_AND_EXPAND:\n            return extend(state, {\n                expanded: true,\n                focusIndex: -1,\n                waiting: false,\n                data: action.data,\n                range: action.data,\n            });\n\n        case ACTION_TYPE_SET_WAITING:\n            return extend(state, {\n                waiting: action.waiting,\n            });\n    }\n\n    return state;\n}\n","const { round, random } = Math;\n\nexport function randomId(prefix = '') {\n    return prefix + round(random() + random() * 10e16).toString(32);\n}\n","import React, {\n    useCallback,\n    useRef,\n    useReducer,\n    useEffect,\n    memo,\n} from '../utils/react';\nimport ListBox from './listbox';\nimport { usePickerPosition } from './use-position';\nimport { comboboxReducer, initialState, Json } from './combobox.store';\nimport { useComboboxActions } from './use-actions';\nimport { randomId } from '../utils/common';\nimport { debounced } from '../utils/function';\nimport {\n    combobox as $combobox,\n    input_wrapper as $input_wrapper,\n    input as $input,\n    trigger as $trigger,\n    picker as $picker,\n    waiting as $waiting,\n} from './combobox.module.scss';\nimport { extend } from '../utils/object';\n\nexport interface ComboboxCommonProps<T> {\n    displayField?: string;\n    valueField?: string;\n    onChange?: (selection?: T) => void;\n    optionRenderer?: (record: T) => JSX.Element | string;\n    displayRenderer?: (record: T) => JSX.Element | string;\n    hideTrigger?: boolean;\n    disabled?: boolean;\n    readOnly?: boolean;\n    className?: string;\n}\n\nexport interface ComboboxLocalProps<T> extends ComboboxCommonProps<T> {\n    queryMode?: 'local';\n    data: T[];\n    onRemoteQuery?: undefined;\n}\n\nexport interface ComboboxRemoteProps<T> extends ComboboxCommonProps<T> {\n    queryMode: 'remote';\n    data?: undefined;\n    onRemoteQuery: (search: string) => T[] | Promise<T[]>;\n}\n\nexport type ComboboxProps<T> = ComboboxLocalProps<T> | ComboboxRemoteProps<T>;\n\nfunction focus(ref: React.RefObject<HTMLElement>) {\n    let el = ref.current;\n    if (el) {\n        el.focus();\n    }\n}\n\nfunction Combobox(props: ComboboxProps<Json>) {\n    const comboboxRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const {\n        queryMode = 'local',\n        displayField = 'text',\n        className = '',\n        data,\n        hideTrigger,\n        disabled,\n        readOnly,\n        onChange,\n        onRemoteQuery,\n        optionRenderer,\n        displayRenderer,\n    } = props;\n\n    const [state, dispatch] = useReducer(\n        comboboxReducer,\n        initialState,\n        (state) => extend(state, { id: randomId('combobox-'), displayField })\n    );\n\n    const {\n        toggle,\n        select,\n        handleKeys,\n        handleRemoteSearch,\n        handleLocalSearch,\n        setData,\n        setWaiting,\n    } = useComboboxActions(dispatch);\n\n    const { id, expanded, selection, range, focusIndex, waiting } = state;\n    const pickerStyle = usePickerPosition(comboboxRef, expanded);\n    const pickerId = id + '-picker';\n    const activeDescendantId =\n        expanded && focusIndex === -1 ? '' : pickerId + '-option-' + focusIndex;\n\n    const handleTriggerClick = useCallback(() => {\n        focus(inputRef);\n        toggle();\n    }, [inputRef]);\n\n    const handleInput = useCallback(\n        debounced((event: React.FormEvent<HTMLInputElement>) => {\n            const input = event.target as HTMLInputElement;\n            const text = input.value;\n            if (queryMode === 'local') {\n                handleLocalSearch(text);\n            } else {\n                setWaiting(true);\n                Promise.resolve(\n                    typeof onRemoteQuery === 'function' && onRemoteQuery(text)\n                ).then((data) => {\n                    data !== false && handleRemoteSearch(data);\n                });\n            }\n        }),\n        [\n            queryMode,\n            onRemoteQuery,\n            setWaiting,\n            handleLocalSearch,\n            handleRemoteSearch,\n        ]\n    );\n\n    useEffect(() => {\n        if (data !== undefined) {\n            setData(data);\n        }\n    }, [data]);\n\n    useEffect(() => {\n        const input = inputRef.current;\n        if (input) {\n            input.value = selection\n                ? typeof displayRenderer === 'function'\n                    ? displayRenderer(selection).toString()\n                    : selection[displayField].toString()\n                : '';\n        }\n    }, [selection, displayField, inputRef, displayRenderer]);\n\n    useEffect(() => {\n        if (typeof onChange === 'function') {\n            onChange(selection);\n        }\n    }, [selection, onChange]);\n\n    return (\n        <div\n            className={\n                $combobox +\n                ' ' +\n                className +\n                (waiting ? ' wating ' + $waiting : '')\n            }\n            ref={comboboxRef}>\n            <div\n                className={$input_wrapper}\n                role=\"combobox\"\n                aria-expanded={expanded ? 'true' : 'false'}\n                aria-owns={pickerId}\n                aria-haspopup=\"listbox\">\n                <input\n                    type=\"text\"\n                    aria-autocomplete=\"both\"\n                    aria-controls={pickerId}\n                    aria-activedescendant={activeDescendantId}\n                    onKeyDown={handleKeys}\n                    onInput={handleInput}\n                    className={$input}\n                    ref={inputRef}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                />\n                {hideTrigger ? null : (\n                    <div\n                        className={$trigger}\n                        tabIndex={-1}\n                        role=\"button\"\n                        aria-label=\"Show options\"\n                        onClick={disabled ? undefined : handleTriggerClick}>\n                        ▼\n                    </div>\n                )}\n            </div>\n            <ListBox\n                id={pickerId}\n                data={range}\n                displayField={displayField}\n                focusIndex={focusIndex}\n                expanded={expanded}\n                onSelect={select}\n                selected={selection}\n                optionRenderer={optionRenderer}\n                className={$picker}\n                style={pickerStyle}\n            />\n        </div>\n    );\n}\n\nexport default memo(Combobox);\n","import { useCallback } from '../utils/react';\nimport {\n    ACTION_TYPE_COLLAPSE,\n    ACTION_TYPE_EXPAND,\n    ACTION_TYPE_KEY_ARROW_DOWN,\n    ACTION_TYPE_KEY_ARROW_UP,\n    ACTION_TYPE_KEY_ENTER,\n    ACTION_TYPE_LOCAL_SEARCH,\n    ACTION_TYPE_SELECT,\n    ACTION_TYPE_SET_DATA,\n    ACTION_TYPE_SET_DATA_AND_EXPAND,\n    ACTION_TYPE_TOGGLE,\n    ACTION_TYPE_SET_WAITING,\n    ComboboxAction,\n} from './combobox.store';\n\nexport function useComboboxActions<Json>(\n    dispatch: React.Dispatch<ComboboxAction<Json>>\n) {\n    const expand = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_EXPAND });\n        },\n        [dispatch]\n    );\n\n    const collapse = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_COLLAPSE });\n        },\n        [dispatch]\n    );\n\n    const toggle = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_TOGGLE });\n        },\n        [dispatch]\n    );\n\n    const select = useCallback(\n        function (selection: Json) {\n            dispatch({\n                type: ACTION_TYPE_SELECT,\n                selection,\n            });\n        },\n        [dispatch]\n    );\n\n    const handleKeys = useCallback(\n        function (event: React.KeyboardEvent<HTMLInputElement>) {\n            switch (event.key) {\n                case 'ArrowDown': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_DOWN });\n                    break;\n                }\n                case 'ArrowUp': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_UP });\n                    break;\n                }\n                case 'Escape':\n                    collapse();\n                    break;\n                case 'Enter':\n                    dispatch({ type: ACTION_TYPE_KEY_ENTER });\n                    break;\n            }\n        },\n        [dispatch]\n    );\n\n    const handleLocalSearch = useCallback(\n        function (query: string) {\n            dispatch({\n                type: ACTION_TYPE_LOCAL_SEARCH,\n                query,\n            });\n        },\n        [dispatch]\n    );\n\n    const setData = useCallback(\n        function (data: Json[]) {\n            dispatch({ type: ACTION_TYPE_SET_DATA, data });\n        },\n        [dispatch]\n    );\n\n    const handleRemoteSearch = useCallback(\n        function (data: Json[]) {\n            dispatch({ type: ACTION_TYPE_SET_DATA_AND_EXPAND, data });\n        },\n        [dispatch]\n    );\n\n    const setWaiting = useCallback(\n        function (waiting: boolean) {\n            dispatch({ type: ACTION_TYPE_SET_WAITING, waiting });\n        },\n        [dispatch]\n    );\n\n    return {\n        expand,\n        collapse,\n        toggle,\n        select,\n        handleKeys,\n        handleLocalSearch,\n        setData,\n        handleRemoteSearch,\n        setWaiting\n    };\n}\n","export function debounced(\n    task: Function,\n    duration: number = 250,\n    scope?: Object\n) {\n    let timer: number;\n\n    return function() {\n        function later(arg: any[]) {\n            clearTimeout(timer);\n            task.apply(scope, arg);\n        }\n\n        clearTimeout(timer);\n\n        //Array.from\n        timer = setTimeout(later, duration, Array.prototype.slice.call(arguments));\n    };\n}\n","import React from 'react';\nimport { memo } from '../packages/utils/react';\nimport { Country } from './Application';\nimport {\n    wrapper as $wrapper,\n    flag as $flag,\n    details as $details,\n    capital as $capital\n} from './option-country.module.css';\n\ntype CountryOptionProps = {\n    country: Country;\n};\n\nexport function CountryOption({ country }: CountryOptionProps) {\n    return (\n        <div className={$wrapper}>\n            <img src={country.flag} className={$flag} />\n            <div className={$details}>\n                <div>{country.name}</div>\n                <div className={$capital}>{country.capital}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(CountryOption);\n","import * as React from 'react';\nimport { useState, useEffect, useCallback } from '../packages/utils/react';\nimport Combobox from '../packages/combobox';\nimport OptionCountry from './option-country';\n\ntype Language = {\n    code: string;\n    name: string;\n};\n\ntype Currency = {\n    code: string;\n    name: string;\n    symbol: string;\n};\n\nexport type Country = {\n    name: string;\n    code: string;\n    capital: string;\n    region: string;\n    currency: Currency;\n    language: Language;\n    flag: string;\n};\n\nexport function Application() {\n    const [countries, setCountries] = useState<Country[]>([]);\n    const [remoteData, setRemoteData] = useState([]);\n\n    useEffect(() => {\n        fetch('/data/countries.json')\n            .then((response) => response.json())\n            .then(setCountries);\n    }, []);\n\n    const remoteQuery = useCallback(\n        function (query: string) {\n            query = query.trim();\n            if (query === '') return [];\n            return new Promise<Country[]>(function (resolve, reject) {\n                const re = new RegExp(query, 'i');\n                const result = countries.filter((country) => {\n                    return re.test(country.name) || re.test(country.capital);\n                });\n                resolve(result);\n            });\n        },\n        [countries]\n    );\n\n    const optionRenderer = useCallback(function (country: Country) {\n        return <OptionCountry country={country} />;\n    }, []);\n\n    return (\n        <div>\n            <h5>Normal</h5>\n            <Combobox data={countries} displayField=\"name\" />\n            <h5>Read Only</h5>\n            <Combobox readOnly data={countries} displayField=\"name\" />\n            <h5>Disabled</h5>\n            <Combobox disabled data={countries} displayField=\"name\" />\n            <h5>Search</h5>\n            <Combobox\n                displayField=\"name\"\n                queryMode=\"remote\"\n                onRemoteQuery={remoteQuery}\n                optionRenderer={optionRenderer}\n                hideTrigger\n            />\n        </div>\n    );\n}\n","import * as ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Application } from './Application';\n\nfunction render(container: HTMLDivElement) {\n    ReactDOM.render(<Application />, container);\n}\n\nfunction unmount(container: HTMLDivElement) {\n    ReactDOM.unmountComponentAtNode(container);\n}\n\nexport default {\n    render,\n    unmount,\n};\n"],"names":["memo","React.memo","React.useCallback","React.useState","React.useRef","React.useReducer","React.useEffect","O","Object","assign","a","b","props","id","className","data","displayField","selected","focusIndex","expanded","style","onSelect","optionRenderer","document","getElementById","idPrefx","li","scrollIntoView","behavior","block","role","$listbox","tabIndex","subject","Array","isArray","map","key","index","item","onClick","prototype","hasOwnProperty","call","object","property","String","win","window","addEventListener","removeEventListener","displayNone","display","el","innerHeight","top","bottom","height","getBoundingClientRect","viewportHeight","maxHeight","waiting","selection","range","action","type","extend","state","comboboxReducer","length","count","RegExp","query","filter","search","test","record","toString","round","random","Math","prefix","useRef","queryMode","hideTrigger","disabled","readOnly","onChange","onRemoteQuery","displayRenderer","useReducer","initialState","state2","randomId","toggle","select","handleKeys","handleRemoteSearch","handleLocalSearch","setData","setWaiting","dispatch","useCallback","event","expand","collapse","useComboboxActions","ref","current","useState","getPosition","calculate","busy","requestAnimationFrame","doCalculate","postion","usePickerPosition","comboboxRef","pickerId","focus","inputRef","task","timer","apply","scope","arg","setTimeout","later","duration","slice","arguments","debounced","target","value","text","resolve","then","data2","input","$combobox","aria-expanded","aria-owns","aria-haspopup","aria-autocomplete","aria-controls","aria-activedescendant","activeDescendantId","onKeyDown","onInput","handleInput","aria-label","handleTriggerClick","ListBox","pickerStyle","country","src","flag","name","capital","response","json","setCountries","trim","Promise","countries","re","OptionCountry","Combobox","remoteQuery","render","container","Application2","unmount"],"mappings":"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"}