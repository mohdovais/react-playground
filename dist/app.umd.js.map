{"version":3,"file":"app.umd.js","sources":["../packages/utils/react.ts","../packages/utils/array.ts","../packages/utils/object.ts","../packages/combobox/listbox.tsx","../packages/utils/dom.ts","../packages/combobox/use-position.ts","../packages/combobox/combobox.store.ts","../packages/combobox/use-actions.ts","../packages/utils/common.ts","../packages/combobox/combobox.tsx","../src/Application.tsx","../src/main.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default React;\nexport const memo = React.memo;\nexport const useCallback = React.useCallback;\nexport const useState = React.useState;\nexport const useRef = React.useRef;\nexport const useReducer = React.useReducer;\nexport const useEffect = React.useEffect;\n","export function ensureArray<T = undefined>(subject?: T | T[] | null) {\n    if (subject == null) return [];\n    if (Array.isArray(subject)) return subject;\n    return [subject];\n}","const O = Object;\nexport const assign = O.assign;\n\nexport function extend<T, S>(a: T, b: S): {} & T & S {\n    return assign({}, a, b);\n}\n\nexport function hasOwnProperty(object: any, property: string): boolean {\n    return O.prototype.hasOwnProperty.call(object, property);\n}\n","import React, { memo, useEffect } from '../utils/react';\nimport { ensureArray } from '../utils/array';\nimport { hasOwnProperty } from '../utils/object';\nimport { Json } from './combobox.store';\nimport {\n    listbox as $listbox,\n    option as $option,\n    focus as $focus,\n    selected as $selected,\n} from './listbox.module.css';\n\nexport interface ListBoxProps<T> {\n    className?: string;\n    id: string;\n    data?: T[];\n    displayField: string;\n    selected?: T;\n    onSelect: (selection: T) => void;\n    focusIndex: number;\n    expanded: boolean;\n    style: React.CSSProperties;\n    optionRenderer?: (record: T) => JSX.Element | string;\n}\n\nfunction ListBox(props: ListBoxProps<Json>) {\n    const {\n        id,\n        className = '',\n        data,\n        displayField,\n        selected,\n        focusIndex,\n        expanded,\n        style,\n        onSelect,\n        optionRenderer,\n    } = props;\n\n    const idPrefx = id + '-option-';\n\n    useEffect(() => {\n        if (focusIndex > -1) {\n            const li = document.getElementById(idPrefx + focusIndex);\n            if (li) {\n                li.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n            }\n        }\n    }, [focusIndex]);\n\n    return (\n        <ul\n            id={id}\n            role=\"listbox\"\n            className={$listbox + ' ' + className}\n            style={style}\n            tabIndex={-1}>\n            {expanded\n                ? ensureArray<Json>(data).map((item, index) => (\n                      <li\n                          key={idPrefx + index}\n                          role=\"option\"\n                          id={idPrefx + index}\n                          className={\n                              $option +\n                              (focusIndex === index ? ' ' + $focus : '') +\n                              (selected === item ? ' ' + $selected : '')\n                          }\n                          onClick={() => onSelect(item)}>\n                          {typeof optionRenderer === 'function'\n                              ? optionRenderer(item)\n                              : hasOwnProperty(item, displayField)\n                              ? String(item[displayField])\n                              : null}\n                      </li>\n                  ))\n                : null}\n        </ul>\n    );\n}\n\nexport default memo(ListBox);\n","export const win = window;\nexport const addEventListener = win.addEventListener;\nexport const removeEventListener = win.removeEventListener;","import React, { useState, useEffect } from '../utils/react';\nimport { win, addEventListener, removeEventListener } from '../utils/dom';\n\nconst displayNone = {\n    display: 'none',\n};\n\nfunction getPosition(el: HTMLDivElement | null): React.CSSProperties {\n    if (el == null) {\n        return displayNone;\n    }\n    const viewportHeight = win.innerHeight;\n    const { top, bottom, height } = el.getBoundingClientRect();\n\n    if (top < 0 || top > viewportHeight) {\n        return displayNone;\n    }\n\n    const bottomSpace = viewportHeight - bottom;\n\n    if (top < bottomSpace) {\n        return {\n            top: height,\n            maxHeight: viewportHeight - bottom - 5,\n        };\n    }\n\n    return {\n        bottom: height,\n        maxHeight: top - 5,\n    };\n}\n\nexport function usePickerPosition(\n    ref: React.RefObject<HTMLDivElement>,\n    calculate: boolean\n) {\n    const current = ref.current;\n    const [postion, setPosition] = useState(() => getPosition(current));\n\n    useEffect(() => {\n        let busy = false;\n        function doCalculate() {\n            if (calculate && !busy) {\n                busy = true;\n                win.requestAnimationFrame(() => {\n                    setPosition(getPosition(current));\n                    busy = false;\n                });\n            }\n        }\n        addEventListener('resize', doCalculate);\n        addEventListener('scroll', doCalculate);\n\n        if (calculate) {\n            doCalculate();\n        } else {\n            setPosition(displayNone);\n        }\n\n        return () => {\n            removeEventListener('resize', doCalculate);\n            removeEventListener('scroll', doCalculate);\n        };\n    }, [calculate, current]);\n\n    return postion;\n}\n","import { extend } from '../utils/object';\n\nexport const ACTION_TYPE_COLLAPSE = 0;\nexport const ACTION_TYPE_EXPAND = 1;\nexport const ACTION_TYPE_TOGGLE = 2;\nexport const ACTION_TYPE_KEY_ARROW_DOWN = 3;\nexport const ACTION_TYPE_KEY_ARROW_UP = 4;\nexport const ACTION_TYPE_KEY_ENTER = 5;\nexport const ACTION_TYPE_SELECT = 6;\nexport const ACTION_TYPE_SET_DATA = 7;\nexport const ACTION_TYPE_LOCAL_SEARCH = 8;\nexport const ACTION_TYPE_SET_DATA_AND_EXPAND = 9;\nexport const ACTION_TYPE_SET_WAITING = 10;\n\n// not actual definition of JSON (null and Array not used)\nexport type Json = {\n    [prop: string]: string | number | boolean | Date | Json | Json[];\n};\n\nexport interface ComboboxState<T> {\n    id: string;\n    waiting: boolean;\n    displayField: string;\n    expanded: boolean;\n    focusIndex: number;\n    selection?: T;\n    data: T[];\n    range: T[];\n}\n\nexport interface ComboboxActionCollpase {\n    type: typeof ACTION_TYPE_COLLAPSE;\n}\n\nexport interface ComboboxActionExpand {\n    type: typeof ACTION_TYPE_EXPAND;\n}\n\nexport interface ComboboxActionToggle {\n    type: typeof ACTION_TYPE_TOGGLE;\n}\n\nexport interface CompobobxActionArrowDown {\n    type: typeof ACTION_TYPE_KEY_ARROW_DOWN;\n}\n\nexport interface ComboboxActionArrowUp {\n    type: typeof ACTION_TYPE_KEY_ARROW_UP;\n}\n\nexport interface ComboboxActionEnter {\n    type: typeof ACTION_TYPE_KEY_ENTER;\n}\n\nexport interface ComboboxActionSelect<T> {\n    type: typeof ACTION_TYPE_SELECT;\n    selection: T;\n}\n\nexport interface ComboboxActionSetData<T> {\n    type: typeof ACTION_TYPE_SET_DATA;\n    data: T[];\n}\n\nexport interface ComboboxActionSearch {\n    type: typeof ACTION_TYPE_LOCAL_SEARCH;\n    query: string;\n}\n\nexport interface ComboboxActionSetDataAndExpand<T> {\n    type: typeof ACTION_TYPE_SET_DATA_AND_EXPAND;\n    data: T[];\n}\n\nexport interface ComboboxActionSetWating {\n    type: typeof ACTION_TYPE_SET_WAITING;\n    waiting: boolean;\n}\n\nexport type ComboboxAction<T> =\n    | ComboboxActionCollpase\n    | ComboboxActionExpand\n    | ComboboxActionToggle\n    | CompobobxActionArrowDown\n    | ComboboxActionArrowUp\n    | ComboboxActionEnter\n    | ComboboxActionSelect<T>\n    | ComboboxActionSetData<T>\n    | ComboboxActionSearch\n    | ComboboxActionSetDataAndExpand<T>\n    | ComboboxActionSetWating;\n\nexport const initialState = {\n    id: '',\n    displayField: '',\n    expanded: false,\n    waiting: false,\n    focusIndex: -1,\n    selection: undefined,\n    data: [],\n    range: [],\n};\n\nexport function comboboxReducer<T extends Json>(\n    state: ComboboxState<T>,\n    action: ComboboxAction<T>\n): ComboboxState<T> {\n    switch (action.type) {\n        case ACTION_TYPE_COLLAPSE:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n            });\n\n        case ACTION_TYPE_EXPAND:\n            return extend(state, {\n                expanded: true,\n            });\n\n        case ACTION_TYPE_TOGGLE:\n            return comboboxReducer(state, {\n                type: state.expanded\n                    ? ACTION_TYPE_COLLAPSE\n                    : ACTION_TYPE_EXPAND,\n            });\n\n        case ACTION_TYPE_KEY_ARROW_DOWN: {\n            let count = state.range.length;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (state.focusIndex + 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ARROW_UP: {\n            let count = state.range.length;\n            let index = state.focusIndex === -1 ? count : state.focusIndex;\n            return extend(state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (count + index - 1) % count,\n            });\n        }\n\n        case ACTION_TYPE_KEY_ENTER:\n            if (state.focusIndex !== -1) {\n                return extend(state, {\n                    expanded: false,\n                    focusIndex: -1,\n                    range: state.data,\n                    selection: state.range[state.focusIndex],\n                });\n            }\n            break;\n\n        case ACTION_TYPE_SELECT:\n            return extend(state, {\n                expanded: false,\n                focusIndex: -1,\n                range: state.data,\n                selection: action.selection,\n            });\n\n        case ACTION_TYPE_SET_DATA: {\n            let data = action.data;\n            return extend(state, {\n                data,\n                range: data,\n            });\n        }\n\n        case ACTION_TYPE_LOCAL_SEARCH: {\n            const search = new RegExp(action.query, 'i');\n            return extend(state, {\n                expanded: true,\n                range: state.data.filter((record) =>\n                    search.test(record[state.displayField].toString())\n                ),\n            });\n        }\n\n        case ACTION_TYPE_SET_DATA_AND_EXPAND:\n            return extend(state, {\n                expanded: true,\n                focusIndex: -1,\n                waiting: false,\n                data: action.data,\n                range: action.data,\n            });\n\n        case ACTION_TYPE_SET_WAITING:\n            return extend(state, {\n                waiting: action.waiting,\n            });\n    }\n\n    return state;\n}\n","import { useCallback } from '../utils/react';\nimport {\n    ACTION_TYPE_COLLAPSE,\n    ACTION_TYPE_EXPAND,\n    ACTION_TYPE_KEY_ARROW_DOWN,\n    ACTION_TYPE_KEY_ARROW_UP,\n    ACTION_TYPE_KEY_ENTER,\n    ACTION_TYPE_LOCAL_SEARCH,\n    ACTION_TYPE_SELECT,\n    ACTION_TYPE_SET_DATA,\n    ACTION_TYPE_SET_DATA_AND_EXPAND,\n    ACTION_TYPE_TOGGLE,\n    ACTION_TYPE_SET_WAITING,\n    ComboboxAction,\n} from './combobox.store';\n\nexport function useComboboxActions<Json>(\n    dispatch: React.Dispatch<ComboboxAction<Json>>\n) {\n    const expand = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_EXPAND });\n        },\n        [dispatch]\n    );\n\n    const collapse = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_COLLAPSE });\n        },\n        [dispatch]\n    );\n\n    const toggle = useCallback(\n        function () {\n            dispatch({ type: ACTION_TYPE_TOGGLE });\n        },\n        [dispatch]\n    );\n\n    const select = useCallback(\n        function (selection: Json) {\n            dispatch({\n                type: ACTION_TYPE_SELECT,\n                selection,\n            });\n        },\n        [dispatch]\n    );\n\n    const handleKeys = useCallback(\n        function (event: React.KeyboardEvent<HTMLInputElement>) {\n            switch (event.key) {\n                case 'ArrowDown': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_DOWN });\n                    break;\n                }\n                case 'ArrowUp': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_UP });\n                    break;\n                }\n                case 'Escape':\n                    collapse();\n                    break;\n                case 'Enter':\n                    dispatch({ type: ACTION_TYPE_KEY_ENTER });\n                    break;\n            }\n        },\n        [dispatch]\n    );\n\n    const handleLocalSearch = useCallback(\n        function (query: string) {\n            dispatch({\n                type: ACTION_TYPE_LOCAL_SEARCH,\n                query,\n            });\n        },\n        [dispatch]\n    );\n\n    const setData = useCallback(\n        function (data: Json[]) {\n            dispatch({ type: ACTION_TYPE_SET_DATA, data });\n        },\n        [dispatch]\n    );\n\n    const handleRemoteSearch = useCallback(\n        function (data: Json[]) {\n            dispatch({ type: ACTION_TYPE_SET_DATA_AND_EXPAND, data });\n        },\n        [dispatch]\n    );\n\n    const setWaiting = useCallback(\n        function (waiting: boolean) {\n            dispatch({ type: ACTION_TYPE_SET_WAITING, waiting });\n        },\n        [dispatch]\n    );\n\n    return {\n        expand,\n        collapse,\n        toggle,\n        select,\n        handleKeys,\n        handleLocalSearch,\n        setData,\n        handleRemoteSearch,\n        setWaiting\n    };\n}\n","const { round, random } = Math;\n\nexport function randomId(prefix = '') {\n    return prefix + round(random() + random() * 10e16).toString(32);\n}\n","import React, {\n    useCallback,\n    useRef,\n    useReducer,\n    useEffect,\n    memo,\n} from '../utils/react';\nimport ListBox from './listbox';\nimport { usePickerPosition } from './use-position';\nimport { comboboxReducer, initialState, Json } from './combobox.store';\nimport { useComboboxActions } from './use-actions';\nimport { randomId } from '../utils/common';\nimport {\n    combobox as $combobox,\n    input_wrapper as $input_wrapper,\n    input as $input,\n    trigger as $trigger,\n    picker as $picker,\n} from './combobox.module.scss';\nimport { extend } from '../utils/object';\n\nexport interface ComboboxCommonProps<T> {\n    displayField?: string;\n    valueField?: string;\n    onChange?: (selection?: T) => void;\n    optionRenderer?: (record: T) => JSX.Element | string;\n    displayRenderer?: (record: T) => JSX.Element | string;\n    hideTrigger?: boolean;\n    disabled?: boolean;\n    readOnly?: boolean;\n    className?: string;\n}\n\nexport interface ComboboxLocalProps<T>\n    extends ComboboxCommonProps<T> {\n    queryMode?: 'local';\n    data: T[];\n    onRemoteQuery?: undefined;\n}\n\nexport interface ComboboxRemoteProps<T> extends ComboboxCommonProps<T> {\n    queryMode: 'remote';\n    data?: undefined;\n    onRemoteQuery: (search: string) => T[] | Promise<T[]>;\n}\n\nexport type ComboboxProps<T> = ComboboxLocalProps<T> | ComboboxRemoteProps<T>;\n\nfunction Combobox(props: ComboboxProps<Json>) {\n    const {\n        queryMode = 'local',\n        onRemoteQuery,\n        data,\n        displayField = 'text',\n        className = '',\n        onChange,\n        optionRenderer,\n        displayRenderer,\n        hideTrigger,\n        disabled,\n        readOnly,\n    } = props;\n\n    const comboboxRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [state, dispatch] = useReducer(\n        comboboxReducer,\n        initialState,\n        (state) => extend(state, { id: randomId('combobox-'), displayField })\n    );\n    const {\n        toggle,\n        select,\n        handleKeys,\n        handleRemoteSearch,\n        handleLocalSearch,\n        setData,\n        setWaiting,\n    } = useComboboxActions(dispatch);\n    const { id, expanded, selection, range, focusIndex, waiting } = state;\n    const pickerStyle = usePickerPosition(comboboxRef, expanded);\n    const pickerId = id + '-picker';\n    const activeDescendantId =\n        expanded && focusIndex === -1 ? '' : pickerId + '-option-' + focusIndex;\n\n    const handleTriggerClick = useCallback(\n        function () {\n            let el = inputRef.current;\n            if (el) {\n                el.focus();\n            }\n            toggle();\n        },\n        [inputRef]\n    );\n\n    const handleInput = useCallback(\n        (event: React.FormEvent<HTMLInputElement>) => {\n            const input = event.target as HTMLInputElement;\n            const text = input.value;\n\n            if (queryMode === 'local') {\n                handleLocalSearch(text);\n            } else {\n                setWaiting(true);\n                Promise.resolve(\n                    typeof onRemoteQuery === 'function' && onRemoteQuery(text)\n                ).then((data) => {\n                    data !== false && handleRemoteSearch(data);\n                });\n            }\n        },\n        [handleRemoteSearch, onRemoteQuery]\n    );\n\n    useEffect(() => {\n        if (data !== undefined) {\n            setData(data);\n        }\n    }, [data]);\n\n    useEffect(() => {\n        const input = inputRef.current;\n        if (input) {\n            input.value = selection\n                ? typeof displayRenderer === 'function'\n                    ? displayRenderer(selection).toString()\n                    : selection[displayField].toString()\n                : '';\n        }\n    }, [selection, displayField, inputRef, displayRenderer]);\n\n    useEffect(() => {\n        if (typeof onChange === 'function') {\n            onChange(selection);\n        }\n    }, [selection, onChange]);\n\n    return (\n        <div\n            className={$combobox + ' ' + className + (waiting ? ' wating' : '')}\n            ref={comboboxRef}>\n            <div\n                className={$input_wrapper}\n                role=\"combobox\"\n                aria-expanded={expanded ? 'true' : 'false'}\n                aria-owns={pickerId}\n                aria-haspopup=\"listbox\">\n                <input\n                    type=\"text\"\n                    aria-autocomplete=\"both\"\n                    aria-controls={pickerId}\n                    aria-activedescendant={activeDescendantId}\n                    onKeyDown={handleKeys}\n                    onInput={handleInput}\n                    className={$input}\n                    ref={inputRef}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                />\n                {hideTrigger ? null : (\n                    <div\n                        className={$trigger}\n                        tabIndex={-1}\n                        role=\"button\"\n                        aria-label=\"Show options\"\n                        onClick={disabled ? undefined : handleTriggerClick}>\n                        ▼\n                    </div>\n                )}\n            </div>\n            <ListBox\n                id={pickerId}\n                data={range}\n                displayField={displayField}\n                focusIndex={focusIndex}\n                expanded={expanded}\n                onSelect={select}\n                selected={selection}\n                optionRenderer={optionRenderer}\n                className={$picker}\n                style={pickerStyle}\n            />\n        </div>\n    );\n}\n\nexport default memo(Combobox);\n","import * as React from 'react';\nimport { useState, useEffect } from '../packages/utils/react';\nimport Combobox from '../packages/combobox';\n\ntype Language = {\n    code: string;\n    name: string;\n};\n\ntype Currency = {\n    code: string;\n    name: string;\n    symbol: string;\n};\n\ntype Country = {\n    name: string;\n    code: string;\n    capital: string;\n    region: string;\n    currency: Currency;\n    language: Language;\n    flag: string;\n};\n\nexport function Application() {\n    const [countries, setCountries] = useState<Country[]>([]);\n    const [remoteData, setRemoteData] = useState([]);\n\n    useEffect(() => {\n        fetch('/data/countries.json')\n            .then((response) => response.json())\n            .then(setCountries);\n    }, []);\n\n    return (\n        <div>\n            <h5>Normal</h5>\n            <Combobox data={countries} displayField=\"name\" />\n            <h5>Read Only</h5>\n            <Combobox readOnly data={countries} displayField=\"name\" />\n            <h5>Disabled</h5>\n            <Combobox disabled data={countries} displayField=\"name\" />\n            <h5>Search</h5>\n            <Combobox\n                displayField=\"name\"\n                queryMode=\"remote\"\n                onRemoteQuery={function (query: string) {\n                    return new Promise(function (resolve, reject) {\n                        setTimeout(function () {\n                            resolve(\n                                Array.from(query).map((name, index) => ({\n                                    name,\n                                    index,\n                                }))\n                            );\n                        }, 5000);\n                    });\n                }}\n                hideTrigger\n            />\n        </div>\n    );\n}\n","import * as ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Application } from './Application';\n\nfunction render(container: HTMLDivElement) {\n    ReactDOM.render(<Application />, container);\n}\n\nfunction unmount(container: HTMLDivElement) {\n    ReactDOM.unmountComponentAtNode(container);\n}\n\nexport default {\n    render,\n    unmount,\n};\n"],"names":["React.memo","React.useCallback","React.useState","React.useRef","React.useReducer","React.useEffect","selected","$listbox","$option","$focus","$selected","$combobox","$input_wrapper","$input","$trigger","ListBox","$picker","Combobox","Application2"],"mappings":"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"}