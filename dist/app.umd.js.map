{"version":3,"file":"app.umd.js","sources":["../packages/utils/react.ts","../packages/combobox/listbox.tsx","../packages/utils/array.ts","../packages/utils/object.ts","../packages/combobox/combobox.store.ts","../packages/combobox/combobox.tsx","../packages/hook/use-random-id.ts","../src/Application.tsx","../src/main.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default React;\nexport const memo = React.memo;\nexport const useCallback = React.useCallback;\nexport const useState = React.useState;\nexport const useRef = React.useRef;\nexport const useReducer = React.useReducer;\nexport const useEffect = React.useEffect;\n","import React, { memo } from '../utils/react';\nimport { ensureArray } from '../utils/array';\nimport { hasOwnProperty } from '../utils/object';\nimport { Json } from './combobox.store';\nimport {\n    listbox as $listbox,\n    option as $option,\n    focus as $focus,\n    selected as $selected,\n} from './listbox.module.css';\n\nexport interface ListBoxProps<T> {\n    className?: string;\n    id: string;\n    data?: T[];\n    displayField: string;\n    selected?: T;\n    onSelect: (selection: T) => void;\n    focusIndex: number;\n    expanded: boolean;\n    optionRenderer?: (record: T) => JSX.Element | string;\n}\n\nfunction ListBox(\n    props: ListBoxProps<Json>,\n    ref:\n        | React.MutableRefObject<HTMLUListElement | null>\n        | ((instance: HTMLUListElement | null) => void)\n        | null\n) {\n    const {\n        id,\n        className = '',\n        data,\n        displayField,\n        selected,\n        focusIndex,\n        expanded,\n        onSelect,\n        optionRenderer,\n    } = props;\n\n    return (\n        <ul\n            id={id}\n            role=\"listbox\"\n            className={$listbox + ' ' + className}\n            ref={ref}>\n            {expanded\n                ? ensureArray<Json>(data).map((item, index) => (\n                      <li\n                          key={id + '-option-' + index}\n                          role=\"option\"\n                          id={id + '-option-' + index}\n                          className={\n                              $option +\n                              (focusIndex === index ? ' ' + $focus : '') +\n                              (selected === item ? ' ' + $selected : '')\n                          }\n                          onClick={() => onSelect(item)}>\n                          {typeof optionRenderer === 'function'\n                              ? optionRenderer(item)\n                              : hasOwnProperty(item, displayField)\n                              ? String(item[displayField])\n                              : null}\n                      </li>\n                  ))\n                : null}\n        </ul>\n    );\n}\n\nconst ListBoxWithForwardRef = React.forwardRef(ListBox);\nexport default memo(ListBoxWithForwardRef);\n","export function ensureArray<T = undefined>(subject?: T | T[] | null) {\n    if (subject == null) return [];\n    if (Array.isArray(subject)) return subject;\n    return [subject];\n}","export function hasOwnProperty(object: any, property: string): boolean {\n    return Object.prototype.hasOwnProperty.call(object, property);\n}","import { useCallback } from '../utils/react';\n\nconst assign = Object.assign;\nconst ACTION_TYPE_COLLAPSE = 0;\nconst ACTION_TYPE_EXPAND = 1;\nconst ACTION_TYPE_TOGGLE = 2;\nconst ACTION_TYPE_KEY_ARROW_DOWN = 3;\nconst ACTION_TYPE_KEY_ARROW_UP = 4;\nconst ACTION_TYPE_KEY_ENTER = 5;\nconst ACTION_TYPE_SELECT = 6;\nconst ACTION_TYPE_SET_DATA = 7;\nconst ACTION_TYPE_SEARCH = 8;\n\n// not actual definition of JSON (null and Array not used)\nexport type Json = { [prop: string]: string | number | boolean | Date }\n\nexport interface ComboboxState<T> {\n    displayField: string;\n    expanded: boolean;\n    focusIndex: number;\n    selection?: T;\n    data: T[];\n    range: T[];\n}\n\nexport interface ComboboxActionCollpase {\n    type: typeof ACTION_TYPE_COLLAPSE\n}\n\nexport interface ComboboxActionExpand {\n    type: typeof ACTION_TYPE_EXPAND;\n}\n\nexport interface ComboboxActionToggle {\n    type: typeof ACTION_TYPE_TOGGLE;\n}\n\nexport interface CompobobxActionArrowDown {\n    type: typeof ACTION_TYPE_KEY_ARROW_DOWN;\n}\n\nexport interface ComboboxActionArrowUp {\n    type: typeof ACTION_TYPE_KEY_ARROW_UP;\n}\n\nexport interface ComboboxActionEnter {\n    type: typeof ACTION_TYPE_KEY_ENTER;\n}\n\nexport interface ComboboxActionSelect<T> {\n    type: typeof ACTION_TYPE_SELECT,\n    selection: T\n}\n\nexport interface ComboboxActionSetData<T> {\n    type: typeof ACTION_TYPE_SET_DATA,\n    data: T[]\n}\n\nexport interface ComboboxActionSearch {\n    type: typeof ACTION_TYPE_SEARCH,\n    query: string;\n}\n\nexport type ComboboxAction<T> = ComboboxActionCollpase | ComboboxActionExpand | ComboboxActionToggle | CompobobxActionArrowDown | ComboboxActionArrowUp | ComboboxActionEnter | ComboboxActionSelect<T> | ComboboxActionSetData<T> | ComboboxActionSearch;\n\nexport const initialState = {\n    displayField: '',\n    expanded: false,\n    focusIndex: -1,\n    selection: undefined,\n    data: [],\n    range: []\n}\n\nexport function comboboxReducer(state: ComboboxState<Json>, action: ComboboxAction<Json>) {\n\n    switch (action.type) {\n        case ACTION_TYPE_COLLAPSE:\n            return assign({}, state, {\n                expanded: false,\n                focusIndex: -1\n            });\n\n        case ACTION_TYPE_EXPAND:\n            return assign({}, state, {\n                expanded: true\n            });\n\n        case ACTION_TYPE_TOGGLE:\n            return assign({}, state, {\n                expanded: !state.expanded\n            });\n\n        case ACTION_TYPE_KEY_ARROW_DOWN: {\n            let count = state.range.length;\n            return assign({}, state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (state.focusIndex + 1) % count\n            });\n        }\n\n        case ACTION_TYPE_KEY_ARROW_UP: {\n            let count = state.range.length;\n            let index = state.focusIndex === -1 ? count : state.focusIndex;\n            return assign({}, state, {\n                expanded: true,\n                focusIndex: count === 0 ? -1 : (count + index - 1) % count\n            });\n        }\n\n        case ACTION_TYPE_KEY_ENTER:\n            if (state.focusIndex !== -1) {\n                return assign({}, state, {\n                    expanded: false,\n                    focusIndex: -1,\n                    selection: state.range[state.focusIndex]\n                })\n            }\n            break;\n\n        case ACTION_TYPE_SELECT:\n            return assign({}, state, {\n                expanded: false,\n                focusIndex: -1,\n                selection: action.selection\n            });\n\n        case ACTION_TYPE_SET_DATA: {\n            let data = action.data;\n            return assign({}, state, {\n                data,\n                range: data\n            });\n        }\n\n        case ACTION_TYPE_SEARCH: {\n            const search = new RegExp(action.query, 'i');\n            return assign({}, state, {\n                expanded: true,\n                range: state.data.filter(record => search.test(record[state.displayField].toString()))\n            })\n        }\n\n\n    }\n\n    return state;\n}\n\nexport function useComboboxActions<Json>(dispatch: React.Dispatch<ComboboxAction<Json>>) {\n\n    const expand = useCallback(function () {\n        dispatch({ type: ACTION_TYPE_EXPAND })\n    }, [dispatch])\n\n    const collapse = useCallback(function () {\n        dispatch({ type: ACTION_TYPE_COLLAPSE })\n    }, [dispatch]);\n\n    const toggle = useCallback(function () {\n        dispatch({ type: ACTION_TYPE_TOGGLE })\n    }, [dispatch])\n\n    const select = useCallback(function (selection: Json) {\n        dispatch({\n            type: ACTION_TYPE_SELECT,\n            selection\n        })\n    }, [dispatch]);\n\n    const handleKeys = useCallback(\n        function (event: React.KeyboardEvent<HTMLInputElement>) {\n            switch (event.key) {\n                case 'ArrowDown': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_DOWN });\n                    break;\n                }\n                case 'ArrowUp': {\n                    dispatch({ type: ACTION_TYPE_KEY_ARROW_UP });\n                    break;\n                }\n                case 'Escape':\n                    collapse();\n                    break;\n                case 'Enter':\n                    dispatch({ type: ACTION_TYPE_KEY_ENTER });\n                    break;\n            }\n        },\n        [dispatch]\n    );\n\n    const handleInput = useCallback(function (event: React.FormEvent<HTMLInputElement>) {\n        const inputEl = event.target as HTMLInputElement;\n        dispatch({\n            type: ACTION_TYPE_SEARCH,\n            query: inputEl.value\n        })\n    }, [dispatch]);\n\n    const setData = useCallback(function (data: Json[]) {\n        dispatch({ type: ACTION_TYPE_SET_DATA, data })\n    }, [dispatch])\n\n    return { expand, collapse, toggle, select, handleKeys, handleInput, setData }\n}","import React, {\n    useCallback,\n    useRef,\n    useReducer,\n    useEffect,\n} from '../utils/react';\nimport ListBox from './listbox';\nimport { useRandomId } from '../hook/use-random-id';\nimport {\n    comboboxReducer,\n    initialState,\n    useComboboxActions,\n    Json,\n} from './combobox.store';\nimport {\n    combobox as $combobox,\n    input_wrapper as $input_wrapper,\n    input as $input,\n    trigger as $trigger,\n    picker as $picker,\n} from './combobox.module.scss';\n\nexport interface ComboboxProps<T> {\n    displayField?: string;\n    valueField?: string;\n    queryMode?: 'remote' | 'local';\n    data: T[];\n    onChange?: (selection?: T) => void;\n    optionRenderer?: (record: T) => JSX.Element | string;\n    displayRenderer?: (record: T) => JSX.Element | string;\n    query?: (search: string) => T[];\n}\n\nfunction resizeOptions(ref: React.RefObject<HTMLUListElement>) {\n    const el = ref.current;\n    if (el) {\n        const rect = el.getBoundingClientRect();\n        el.style.maxHeight = window.innerHeight - rect.y - 10 + 'px';\n    }\n}\n\nexport function Combobox(props: ComboboxProps<Json>) {\n    const {\n        data,\n        displayField = 'text',\n        onChange,\n        optionRenderer,\n        displayRenderer,\n    } = props;\n    const inputRef = useRef<HTMLInputElement>(null);\n    const optionsRef = useRef<HTMLUListElement>(null);\n\n    const id = useRandomId('combobox-');\n    const listboxId = id + '-listbox';\n    const [state, dispatch] = useReducer(\n        comboboxReducer,\n        initialState,\n        (state) => Object.assign({}, state, { displayField })\n    );\n    const { expanded, selection, range, focusIndex } = state;\n    const activeDescendantId =\n        expanded && focusIndex === -1\n            ? ''\n            : listboxId + '-option-' + focusIndex;\n\n    const {\n        toggle,\n        select,\n        handleKeys,\n        handleInput,\n        setData,\n    } = useComboboxActions(dispatch);\n\n    const handleTriggerClick = useCallback(\n        function () {\n            let el = inputRef.current;\n            if (el) {\n                el.focus();\n            }\n            toggle();\n        },\n        [inputRef]\n    );\n\n    useEffect(() => {\n        setData(data);\n    }, [data]);\n\n    useEffect(() => {\n        const input = inputRef.current;\n        if (input) {\n            input.value = selection\n                ? typeof displayRenderer === 'function'\n                    ? displayRenderer(selection).toString()\n                    : selection[displayField].toString()\n                : '';\n        }\n    }, [selection, displayField, inputRef, displayRenderer]);\n\n    useEffect(() => {\n        if (typeof onChange === 'function') {\n            onChange(selection);\n        }\n    }, [selection, onChange]);\n\n    useEffect(() => {\n        if (activeDescendantId !== '') {\n            const li = document.getElementById(activeDescendantId);\n            if (li) {\n                li.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n            }\n        }\n    }, [activeDescendantId]);\n\n    useEffect(() => {\n        expanded && resizeOptions(optionsRef);\n    }, [optionsRef, expanded]);\n\n    useEffect(() => {\n        const resize = () => resizeOptions(optionsRef);\n        window.addEventListener('resize', resize);\n        return () => {\n            window.removeEventListener('resize', resize);\n        };\n    }, [optionsRef]);\n\n    return (\n        <div className={$combobox}>\n            <div\n                className={$input_wrapper}\n                role=\"combobox\"\n                aria-expanded={expanded ? 'true' : 'false'}\n                aria-owns={listboxId}\n                aria-haspopup=\"listbox\">\n                <input\n                    type=\"text\"\n                    aria-autocomplete=\"both\"\n                    aria-controls={listboxId}\n                    aria-activedescendant={activeDescendantId}\n                    onKeyDown={handleKeys}\n                    onInput={handleInput}\n                    className={$input}\n                    ref={inputRef}\n                />\n                <div\n                    className={$trigger}\n                    tabIndex={-1}\n                    role=\"button\"\n                    aria-label=\"Show options\"\n                    onClick={handleTriggerClick}>\n                    ▼\n                </div>\n            </div>\n            <ListBox\n                id={listboxId}\n                data={range}\n                displayField={displayField}\n                focusIndex={focusIndex}\n                expanded={expanded}\n                onSelect={select}\n                selected={selection}\n                optionRenderer={optionRenderer}\n                className={$picker}\n                ref={optionsRef}\n            />\n        </div>\n    );\n}\n","import { useState } from \"../utils/react\";\n\nexport function useRandomId(prefix = \"\") {\n    const id = useState(() => prefix + Math.round(Math.random() + Math.random() * 10e16).toString(32));\n    return id[0];\n}","import * as React from 'react';\nimport { useState, useEffect } from '../packages/utils/react';\nimport Combobox from '../packages/combobox';\n\ninterface Language {\n    code: string;\n    name: string;\n}\n\ninterface Currency {\n    code: string;\n    name: string;\n    symbol: string;\n}\n\ninterface Country {\n    name: string;\n    code: string;\n    capital: string;\n    region: string;\n    currency: Currency;\n    language: Language;\n    flag: string;\n}\n\nexport function Application() {\n    const [countries, setCountries] = useState<Country[]>([]);\n\n    useEffect(() => {\n        fetch('/data/countries.json')\n            .then((response) => response.json())\n            .then(setCountries);\n    }, []);\n    return (\n        <div>\n            <p>\n                Nullam vel odio magna. Ut lacinia sit amet quam nec imperdiet.\n                Quisque eget lacus non lectus consectetur rhoncus. Proin eget\n                nunc neque. Mauris sed laoreet augue. Nullam a turpis blandit,\n                fringilla enim vel, accumsan enim. Donec pretium elit eget\n                posuere ornare. Etiam laoreet lorem elit, in mattis ipsum\n                pharetra ac. Quisque viverra sem in dolor dignissim fringilla.\n                Vestibulum ante ipsum primis in faucibus orci luctus et ultrices\n                posuere cubilia curae.\n            </p>\n            <Combobox data={countries} displayField=\"name\" />\n            <p>\n                Duis vel enim vel mi vulputate egestas vitae nec odio. Donec vel\n                sem dolor. Sed scelerisque tristique velit, vitae ultricies\n                risus tempus quis. Integer dignissim in est et laoreet. Praesent\n                aliquet congue placerat. Nam dolor ante, eleifend eu finibus\n                eget, posuere accumsan est. Integer ut molestie tortor. Proin\n                mattis orci sit amet lectus sollicitudin, non dignissim nisi\n                tincidunt. Nullam vel leo venenatis, molestie lectus convallis,\n                tincidunt eros. Pellentesque habitant morbi tristique senectus\n                et netus et malesuada fames ac turpis egestas. Nunc lorem enim,\n                consectetur at mollis rhoncus, hendrerit quis nulla.\n            </p>\n        </div>\n    );\n}\n","import * as ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Application } from './Application';\n\nfunction render(container: HTMLDivElement) {\n    ReactDOM.render(<Application />, container);\n}\n\nfunction unmount(container: HTMLDivElement) {\n    ReactDOM.unmountComponentAtNode(container);\n}\n\nexport default {\n    render,\n    unmount,\n};\n"],"names":["memo","React.memo","useCallback","React.useCallback","useState","React.useState","useRef","React.useRef","useReducer","React.useReducer","useEffect","React.useEffect","React","forwardRef","props","ref","id","className","data","displayField","selected","focusIndex","expanded","onSelect","optionRenderer","role","$listbox","subject","Array","isArray","map","item","index","key","onClick","object","property","Object","prototype","hasOwnProperty","call","String","assign","initialState","selection","range","state","action","type","count","length","search","RegExp","query","filter","test","record","toString","el","current","rect","getBoundingClientRect","style","maxHeight","window","innerHeight","y","onChange","displayRenderer","inputRef","optionsRef","listboxId","prefix","Math","round","random","useRandomId","dispatch","comboboxReducer","state2","activeDescendantId","toggle","select","handleKeys","handleInput","setData","expand","collapse","event","inputEl","target","value","useComboboxActions","handleTriggerClick","focus","input","li","document","getElementById","scrollIntoView","behavior","block","resizeOptions","resize","addEventListener","removeEventListener","aria-expanded","aria-owns","aria-haspopup","aria-autocomplete","aria-controls","aria-activedescendant","onKeyDown","onInput","tabIndex","aria-label","ListBox","countries","setCountries","then","response","json","Combobox","render","container","Application2","unmount"],"mappings":"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"}