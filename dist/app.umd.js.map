{"version":3,"file":"app.umd.js","sources":["../packages/utils/array.ts","../packages/utils/object.ts","../packages/listbox/ListBox.tsx","../packages/hook/use-random-id.ts","../packages/combobox/Combobox.tsx","../src/Application.tsx","../src/main.tsx"],"sourcesContent":["export function ensureArray<T = undefined>(subject?: T | T[] | null) {\n    if (subject == null) return [];\n    if (Array.isArray(subject)) return subject;\n    return [subject];\n}","export function hasOwnProperty(object: any, property: string): boolean {\n    return Object.prototype.hasOwnProperty.call(object, property);\n}","import React from 'react';\nimport { ensureArray } from '../utils/array';\nimport { hasOwnProperty } from '../utils/object';\nimport {\n    listbox as $listbox,\n    option as $option,\n    focus as $focus,\n    selected as $selected,\n} from './listbox.module.css';\n\nexport interface ListBoxProps<T> {\n    className?: string;\n    id: string;\n    data?: T[];\n    displayField: string;\n    selected: T;\n    onSelect: (selection: T) => void;\n    focusIndex: number;\n    expanded: boolean;\n}\n\nexport function ListBox<T>(props: ListBoxProps<T>) {\n    const {\n        id,\n        className = '',\n        data,\n        displayField,\n        selected,\n        onSelect,\n        focusIndex,\n        expanded,\n    } = props;\n    return (\n        <ul id={id} role=\"listbox\" className={$listbox + ' ' + className}>\n            {expanded\n                ? ensureArray<T>(data).map((item, index) => (\n                      <li\n                          key={id + '-option-' + index}\n                          role=\"option\"\n                          id={id + '-option-' + index}\n                          className={\n                              $option +\n                              (focusIndex === index ? ' ' + $focus : '') +\n                              (selected === item ? ' ' + $selected : '')\n                          }\n                          onClick={() => onSelect(item)}>\n                          {hasOwnProperty(item, displayField)\n                              ? item[displayField]\n                              : null}\n                      </li>\n                  ))\n                : null}\n        </ul>\n    );\n}\n","import { useState } from \"react\";\n\nexport function useRandomId(prefix = \"\") {\n    const id = useState(() => prefix + Math.round(Math.random() + Math.random() * 10e16).toString(32));\n    return id[0];\n}","import React, { useCallback, useState, useRef } from 'react';\nimport ListBox from '../listbox';\nimport { useRandomId } from '../hook/use-random-id';\nimport {\n    combobox as $combobox,\n    input_wrapper as $input_wrapper,\n    input as $input,\n    trigger as $trigger,\n} from './Combobox.module.scss';\n\nexport interface ComboboxProps<T> {\n    displayField: 'text';\n    valueField: 'text';\n    queryMode: 'local';\n    data: T[];\n    onChange?: (selection: T) => void;\n}\n\nexport function Combobox<T = undefined>(props: ComboboxProps<T>) {\n    const { data, displayField = 'text', onChange } = props;\n    const inputRef = useRef<HTMLInputElement>(null);\n    const id = useRandomId('combobox-');\n    const listboxId = id + '-listbox';\n    const [expanded, setExpanded] = useState<boolean>(false);\n    const [focusIndex, setFocusIndex] = useState<number>(-1);\n    const [selection, setSelection] = useState<T>();\n    const collapse = useCallback(() => {\n        setExpanded(false);\n        setFocusIndex(-1);\n    }, []);\n    const handleKeyDown = useCallback(\n        function (event: React.KeyboardEvent<HTMLInputElement>) {\n            const count = data.length;\n            switch (event.key) {\n                case 'ArrowDown': {\n                    setExpanded(true);\n                    setFocusIndex((focusIndex + 1) % count);\n                    break;\n                }\n                case 'ArrowUp': {\n                    setExpanded(true);\n                    let index = focusIndex === -1 ? count : focusIndex;\n                    setFocusIndex((count + index - 1) % count);\n                    break;\n                }\n                case 'Escape':\n                    collapse();\n                    break;\n                case 'Enter':\n                    if (focusIndex !== -1) {\n                        handleSelect(data[focusIndex]);\n                    }\n            }\n        },\n        [data, focusIndex]\n    );\n\n    const handleTriggerClick = useCallback(\n        function () {\n            setExpanded(!expanded);\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        },\n        [expanded, inputRef]\n    );\n\n    const handleSelect = useCallback(function (selection: T) {\n        setExpanded(false);\n        setSelection(selection);\n        typeof onChange === 'function' && onChange(selection);\n    }, []);\n\n    return (\n        <div className={$combobox}>\n            <div\n                className={$input_wrapper}\n                role=\"combobox\"\n                aria-expanded=\"false\"\n                aria-owns={listboxId}\n                aria-haspopup=\"listbox\">\n                <input\n                    type=\"text\"\n                    aria-autocomplete=\"both\"\n                    aria-controls={listboxId}\n                    aria-activedescendant={\n                        focusIndex === -1 ? '' : id + '-option-' + focusIndex\n                    }\n                    onKeyDown={handleKeyDown}\n                    onBlur={() => collapse()}\n                    className={$input}\n                    ref={inputRef}\n                />\n                <div\n                    className={$trigger}\n                    tabIndex={-1}\n                    role=\"button\"\n                    aria-label=\"Show options\"\n                    onClick={handleTriggerClick}>\n                    â–¼\n                </div>\n            </div>\n            <ListBox\n                id={listboxId}\n                data={data}\n                displayField={displayField}\n                focusIndex={focusIndex}\n                expanded={expanded}\n                onSelect={handleSelect}\n                selected={selection}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport Combobox from '../packages/combobox';\n\nconst veggies = [\n    {\n        text: 'Apple',\n        value: 'apple',\n    },\n    {\n        text: 'Orange',\n        value: 'orange',\n    },\n    {\n        text: 'Banana',\n        value: 'banana',\n    },\n];\n\nexport function Application() {\n    return <Combobox label=\"Fruit or Vegtable\" value=\"123\" data={veggies} />;\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Application } from './Application';\n\nfunction render(container: HTMLDivElement) {\n    ReactDOM.render(<Application />, container);\n}\n\nfunction unmount(container: HTMLDivElement) {\n    ReactDOM.unmountComponentAtNode(container);\n}\n\nexport default {\n    render,\n    unmount,\n};\n"],"names":["selected","$listbox","$option","$focus","$selected","useState","useRef","useCallback","$combobox","$input_wrapper","$input","$trigger","Application2"],"mappings":"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"}