{"version":3,"file":"framework-3f514d1c.js","sources":["../packages/utils/react.ts","../packages/utils/dom.ts","../packages/hook/use-position.ts","../packages/utils/common.ts","../packages/hook/use-random-id.ts","../packages/picker/context.ts","../packages/utils/object.ts","../packages/picker/state.ts","../packages/picker/picker.tsx","../packages/constant.ts","../packages/picker/index.ts","../packages/comobobox/context.ts","../packages/comobobox/option.tsx","../packages/comobobox/optgroup.tsx","../packages/comobobox/combobox.tsx","../packages/comobobox/index.ts"],"sourcesContent":["import * as React from 'react';\n\nexport default React;\nexport const memo = React.memo;\nexport const useCallback = React.useCallback;\nexport const useState = React.useState;\nexport const useRef = React.useRef;\nexport const useReducer = React.useReducer;\nexport const useEffect = React.useEffect;\nexport const forwardRef = React.forwardRef;\nexport const useMemo = React.useMemo;\nexport const Fragment = React.Fragment;\nexport const useContext = React.useContext;\nexport const Children = React.Children;\nexport const isValidElement = React.isValidElement;\nexport const createContext = React.createContext;\n","export const win = window;\nexport const addEventListener = win.addEventListener;\nexport const removeEventListener = win.removeEventListener;","import React, { useState, useEffect } from '../utils/react';\nimport { win, addEventListener, removeEventListener } from '../utils/dom';\nimport { EVENT_RESIZE, EVENT_SCROLL } from '../constant';\n\nconst none: React.CSSProperties = { display: 'none' };\n\nfunction getPosition(el: HTMLElement | null, pre = none): React.CSSProperties {\n    if (el == null) {\n        return pre;\n    }\n    const viewportHeight = win.innerHeight;\n    const viewportWidth = win.innerWidth;\n\n    const { top, left, bottom, height } = el.getBoundingClientRect();\n\n    if (top < 0 || top > viewportHeight || left < 0 || left > viewportWidth) {\n        return pre;\n    }\n\n    const bottomSpace = viewportHeight - bottom;\n    const rightSpace = viewportWidth - left;\n\n    let style: React.CSSProperties = {\n        position: 'absolute',\n        width: 'max-content',\n    };\n\n    if (top < bottomSpace) {\n        style.top = height;\n        style.maxHeight = Math.floor(viewportHeight - bottom - 5);\n    } else {\n        style.bottom = height;\n        style.maxHeight = top - 5;\n    }\n\n    if (left < rightSpace) {\n        style.left = 0;\n        style.maxWidth = Math.floor(viewportWidth - left - 5);\n    } else {\n        style.right = 0;\n        style.maxWidth = left - 5;\n    }\n\n    return style;\n}\n\nexport function usePickerPosition(\n    ref: React.RefObject<HTMLElement>,\n    calculate = true\n) {\n    const current = ref.current;\n    const [postion, setPosition] = useState(() => getPosition(current));\n\n    useEffect(() => {\n        let busy = false;\n        function doCalculate() {\n            if (calculate && !busy) {\n                busy = true;\n                win.requestAnimationFrame(() => {\n                    setPosition(getPosition(current));\n                    busy = false;\n                });\n            }\n        }\n        addEventListener(EVENT_RESIZE, doCalculate);\n        addEventListener(EVENT_SCROLL, doCalculate);\n\n        if (calculate) {\n            doCalculate();\n        } else {\n            setPosition(none);\n        }\n\n        return () => {\n            removeEventListener(EVENT_RESIZE, doCalculate);\n            removeEventListener(EVENT_SCROLL, doCalculate);\n        };\n    }, [calculate, current]);\n\n    return postion;\n}\n","const { round, random } = Math;\n\nexport function randomId(prefix = '') {\n    return prefix + round(random() + random() * 10e16).toString(32);\n}\n","import { useState } from '../utils/react';\nimport { randomId } from '../utils/common';\n\nexport function useRandomId(prefix?: string) {\n    const id = useState(() => randomId(prefix));\n    return id[0];\n}\n","import { createContext } from '../utils/react';\n\nexport type Key = {\n    key: string;\n    shiftKey: boolean;\n    ctrlKey: boolean;\n};\n\ntype Context = {\n    keyDown: Key | null;\n    setValue: (value: string) => void;\n};\n\nconst context: Context = {\n    keyDown: null,\n    setValue: (value: string) => {},\n};\n\nexport default createContext(context);\n","const O = Object;\nexport const assign = O.assign;\n\nexport function extend<T, S>(a: T, b: S): {} & T & S {\n    return assign({}, a, b);\n}\n\nexport function hasOwnProperty(object: any, property: string): boolean {\n    return O.prototype.hasOwnProperty.call(object, property);\n}\n","import { useReducer, useCallback, useMemo } from '../utils/react';\nimport { extend } from '../utils/object';\nimport { Key } from './context';\n\ninterface PickerState {\n    expanded: boolean;\n    keyDown: Key | null;\n    value: string;\n    activeDescendant: string;\n}\n\nconst ACTION_SET_VALUE = 0;\nconst ACTION_SET_EXPANDED = 1;\nconst ACTION_SET_KEY = 2;\n\ntype ActionSetValue = {\n    type: typeof ACTION_SET_VALUE;\n    value: string;\n    collapse: boolean;\n};\n\ntype ActionSetExpanded = {\n    type: typeof ACTION_SET_EXPANDED;\n    expand: boolean;\n};\n\ntype ActionSetKey = {\n    type: typeof ACTION_SET_KEY;\n    key: Key;\n    expand: boolean;\n};\n\ntype Action = ActionSetValue | ActionSetExpanded | ActionSetKey;\n\nconst KEYS_TO_BE_PROPAGATED = [\n    'ArrowDown',\n    'ArrowUp',\n    'ArrowRight',\n    'ArrowLeft',\n    ' ',\n    'Enter',\n    'Escape',\n];\n\nfunction pickerReducer(state: PickerState, action: Action): PickerState {\n    switch (action.type) {\n        case ACTION_SET_VALUE:\n            return extend(state, {\n                value: action.value,\n                expanded: action.collapse ? false : state.expanded,\n            });\n        case ACTION_SET_EXPANDED:\n            return extend(state, {\n                expanded: action.expand,\n            });\n        case ACTION_SET_KEY:\n            return extend(state, {\n                keyDown: action.key,\n                expanded: action.expand || state.expanded,\n            });\n    }\n    return state;\n}\n\nexport function usePickerState({ multiple }) {\n    const [state, disptach] = useReducer(pickerReducer, {\n        expanded: false,\n        keyDown: null,\n        value: '',\n        activeDescendant: '',\n    });\n\n    const { expanded, value, keyDown, activeDescendant } = state;\n\n    const setValue = useCallback(\n        (value: string) => {\n            disptach({\n                type: ACTION_SET_VALUE,\n                value,\n                collapse: !multiple,\n            });\n        },\n        [disptach]\n    );\n\n    const context = useMemo(() => ({ setValue, keyDown }), [keyDown]);\n\n    const handleKeyDown = useCallback(function (event: React.KeyboardEvent) {\n        const { key, ctrlKey, metaKey, shiftKey } = event;\n\n        if (key === 'Escape') {\n            return disptach({ type: ACTION_SET_EXPANDED, expand: false });\n        }\n\n        if (KEYS_TO_BE_PROPAGATED.indexOf(key) > -1) {\n            return disptach({\n                type: ACTION_SET_KEY,\n                key: {\n                    key,\n                    shiftKey,\n                    ctrlKey: ctrlKey || metaKey,\n                },\n                expand: key === 'ArrowDown' || key === 'ArrowUp',\n            });\n        }\n    }, []);\n\n    return { expanded, value, activeDescendant, context, handleKeyDown };\n}\n","import React, { memo, useEffect, useRef } from '../utils/react';\nimport { usePickerPosition } from '../hook/use-position';\nimport { useRandomId } from '../hook/use-random-id';\nimport PickerContext from './context';\nimport { usePickerState } from './state';\nimport {\n    reaper as $reaper,\n    input as $input,\n    picker as $picker,\n    picker_container as $picker_container,\n    trigger as $trigger,\n} from './picker.module.css';\n\nexport interface PickerProps {\n    autocomplete?: React.AriaAttributes['aria-autocomplete'];\n    autofocus?: boolean;\n    disabled?: boolean;\n    multiple?: boolean;\n    name?: string;\n    required?: boolean;\n    role?: string;\n    id?: string;\n    className?: string;\n    style?: React.CSSProperties;\n    readOnly?: boolean;\n    placeholder?: string;\n    children?: React.ReactElement;\n    onChange?: CallableFunction;\n    triggerIcon?: any;\n    onInput?: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\nconst TriggerIcon = memo(function TriggerIcon() {\n    return (\n        <svg viewBox=\"0 0 16 16\">\n            <path\n                fill=\"none\"\n                stroke=\"#343a40\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M2 5l6 6 6-6\"\n            />\n        </svg>\n    );\n});\n\nfunction Picker(props: PickerProps) {\n    const {\n        autocomplete = 'both',\n        autofocus,\n        children,\n        className = '',\n        disabled,\n        id,\n        multiple,\n        name,\n        onInput,\n        placeholder,\n        readOnly,\n        required,\n        role = 'combobox',\n        style,\n        triggerIcon = <TriggerIcon />,\n    } = props;\n\n    const ref = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const {\n        expanded,\n        value,\n        activeDescendant,\n        context,\n        handleKeyDown,\n    } = usePickerState({ multiple });\n\n    const randomId = useRandomId('picker-');\n    const componentId = id === undefined ? randomId : id;\n    const pickerId = componentId + '-picker';\n    const pickerStyle = usePickerPosition(ref, expanded);\n\n    useEffect(() => {\n        if (autofocus) {\n            inputRef?.current?.focus();\n        }\n    }, []);\n\n    return (\n        <div\n            id={componentId}\n            className={$reaper + ' ' + className}\n            style={style}\n            role={role}\n            aria-expanded={expanded ? 'true' : 'false'}\n            aria-owns={pickerId}\n            aria-haspopup=\"listbox\"\n            ref={ref}>\n            <div className={$picker_container}>\n                <div>\n                    <input\n                        type=\"text\"\n                        name={name}\n                        aria-autocomplete={autocomplete}\n                        aria-controls={pickerId}\n                        aria-activedescendant={activeDescendant}\n                        onKeyDown={handleKeyDown}\n                        onInput={onInput}\n                        ref={inputRef}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                        placeholder={placeholder}\n                        className={$input}\n                        required={required}\n                        value={value}\n                    />\n                    <div\n                        tabIndex={-1}\n                        role=\"button\"\n                        aria-label=\"Show picker\"\n                        className={$trigger}\n                        onClick={\n                            disabled\n                                ? undefined\n                                : () => {\n                                      setExpanded(!expanded);\n                                      inputRef?.current?.focus();\n                                  }\n                        }>\n                        {triggerIcon}\n                    </div>\n                </div>\n                <div id={pickerId} className={$picker} style={pickerStyle}>\n                    {expanded ? (\n                        <PickerContext.Provider value={context}>\n                            {children}\n                        </PickerContext.Provider>\n                    ) : null}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(Picker);\n","export const KEY_ARROW_DOWN = 'ArrowDown';\nexport const KEY_ARROW_UP = 'ArrowUp';\nexport const KEY_ENTER = 'Enter';\n\nexport const EVENT_RESIZE = 'resize';\nexport const EVENT_SCROLL = 'scroll';\n","import Picker from './picker';\nimport $PickerContext from './context';\n\nexport default Picker;\nexport const PickerContext = $PickerContext;\nexport * from './picker';\n","import React from '../utils/react';\n\nexport const OptGroupContext = React.createContext({ disabled: false });\n","import React, { useRef, useContext, memo } from '../utils/react';\nimport { OptGroupContext } from './context';\nimport { option as $option } from './style.module.css';\n\nexport interface OptionProps {\n    disabled?: boolean;\n    selected?: boolean;\n    value?: any;\n    children: React.ReactElement | string | number;\n}\n\nfunction Option(props: OptionProps) {\n    const ref = useRef<HTMLLIElement>(null);\n    const { disabled: disabledGroup } = useContext(OptGroupContext);\n    const { value, children, disabled = false, selected = false } = props;\n    const isDisabled = disabledGroup || disabled;\n    const clickHandler = () => {\n        const current = ref.current;\n        const _value =\n            value === undefined ? current && current.innerText : value;\n        console.log(_value);\n    };\n\n    return (\n        <li\n            className={$option}\n            ref={ref}\n            onClick={isDisabled ? undefined : clickHandler}>\n            {children}\n        </li>\n    );\n}\n\nexport default memo(Option);\n","import React, { memo, Children, isValidElement } from '../utils/react';\nimport { OptGroupContext } from './context';\nimport Option from './option';\nimport {\n    option_group as $option_group,\n    option_group_label as $option_group_label,\n} from './style.module.css';\n\nexport interface OptGroupProps {\n    disabled?: boolean;\n    label: string;\n    children: any;\n}\n\nfunction OptGroup(props: OptGroupProps) {\n    const { label, disabled = false } = props;\n    const children = Children.toArray(props.children).filter(\n        (child: React.ReactNode) =>\n            isValidElement(child) && child.type === Option\n    );\n    return (\n        <li className={$option_group}>\n            <label className={$option_group_label}>{label}</label>\n            {children.length > 0 ? (\n                <ul>\n                    <OptGroupContext.Provider value={{ disabled }}>\n                        {children}\n                    </OptGroupContext.Provider>\n                </ul>\n            ) : null}\n        </li>\n    );\n}\n\nexport default memo(OptGroup);\n","import React, {\n    memo,\n    useContext,\n    Children,\n    isValidElement,\n} from '../utils/react';\nimport Picker, { PickerContext, PickerProps } from '../picker';\nimport OptGroup from './optgroup';\nimport Option from './option';\nimport { listbox as $listbox } from './style.module.css';\n\ntype DropDownProps = {\n    children: any;\n};\n\nexport interface ComboboxProps extends PickerProps {}\n\nconst DropDown = memo(function DropDown(props: DropDownProps) {\n    const { key } = useContext(PickerContext);\n    console.log(key);\n\n    const children = Children.toArray(props.children).filter(\n        (child: React.ReactNode) =>\n            isValidElement(child) &&\n            (child.type === Option || child.type === OptGroup)\n    );\n    // const listeners = useMemo(() => ({ onClick }), [onClick]);\n    return <ul className={$listbox}>{children}</ul>;\n});\n\nfunction Combobox(props: ComboboxProps) {\n    const { className = '', children, ...restProps } = props;\n    return (\n        <Picker {...restProps} className={'combobox ' + className}>\n            <DropDown>{children}</DropDown>\n        </Picker>\n    );\n}\n\nexport default memo(Combobox);\n","import Combobox from './combobox';\nimport $Option from './option';\nimport $OptGroup from './optgroup';\n\nexport default Combobox;\nexport const OptGroup = $OptGroup;\nexport const Option = $Option;\n"],"names":["memo","React.memo","React.useCallback","React.useState","React.useRef","React.useReducer","React.useEffect","React.useMemo","React.useContext","React.Children","React.isValidElement","React.createContext","win","window","addEventListener","removeEventListener","none","display","el","pre","innerHeight","innerWidth","top","left","bottom","height","getBoundingClientRect","viewportHeight","viewportWidth","position","width","maxHeight","Math","floor","rightSpace","maxWidth","right","style","round","random","prefix","useState","toString","randomId","createContext","keyDown","setValue","Object","assign","a","b","action","type","extend","state","value","expanded","collapse","expand","key","TriggerIcon","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","autocomplete","autofocus","children","className","disabled","id","multiple","name","onInput","placeholder","readOnly","required","role","triggerIcon","props","useRef","activeDescendant","context","handleKeyDown","useReducer","pickerReducer","useCallback","disptach","useMemo","ctrlKey","metaKey","shiftKey","event","KEYS_TO_BE_PROPAGATED","indexOf","usePickerState","useRandomId","componentId","ref","current","getPosition","calculate","busy","requestAnimationFrame","doCalculate","postion","usePickerPosition","focus","$reaper","aria-expanded","aria-owns","pickerId","aria-haspopup","aria-autocomplete","aria-controls","aria-activedescendant","onKeyDown","inputRef","tabIndex","aria-label","onClick","pickerStyle","PickerContext","Provider","context2","$PickerContext","OptGroupContext","React","useContext","selected","disabledGroup","isDisabled","innerText","log","_value","label","Children","toArray","filter","isValidElement","child","Option","length","DropDown","OptGroup","__rest","Picker","__assign","restProps","$OptGroup","$Option"],"mappings":"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"}